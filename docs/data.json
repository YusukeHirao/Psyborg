{
    "project": {
        "name": "Psyborg",
        "description": "The collection of plugins that extends DOM elements and manage sequences.",
        "version": "0.5.0",
        "url": "http://www.yusukehirao.com"
    },
    "files": {
        "src/d.ts/jquery/jquery.d.ts": {
            "name": "src/d.ts/jquery/jquery.d.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/Psycle/Psycle.ts": {
            "name": "src/psyborg/Psycle/Psycle.ts",
            "modules": {},
            "classes": {
                "Psycle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/Psycle/PsycleContainer.ts": {
            "name": "src/psyborg/Psycle/PsycleContainer.ts",
            "modules": {},
            "classes": {
                "PsycleContainer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/Psycle/PsyclePanel.ts": {
            "name": "src/psyborg/Psycle/PsyclePanel.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/Psycle/PsyclePanelClone.ts": {
            "name": "src/psyborg/Psycle/PsyclePanelClone.ts",
            "modules": {},
            "classes": {
                "PsyclePanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/Psycle/PsyclePanelList.ts": {
            "name": "src/psyborg/Psycle/PsyclePanelList.ts",
            "modules": {},
            "classes": {
                "PsyclePanelList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/Psycle/PsycleStage.ts": {
            "name": "src/psyborg/Psycle/PsycleStage.ts",
            "modules": {},
            "classes": {
                "PsycleStage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/Psycle/PsycleTransition.ts": {
            "name": "src/psyborg/Psycle/PsycleTransition.ts",
            "modules": {},
            "classes": {
                "PsycleTransition": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/Psycle/PsycleTransitionSlide.ts": {
            "name": "src/psyborg/Psycle/PsycleTransitionSlide.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/PsyborgElement.ts": {
            "name": "src/psyborg/PsyborgElement.ts",
            "modules": {},
            "classes": {
                "PsyborgElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/PsyborgEvent.ts": {
            "name": "src/psyborg/PsyborgEvent.ts",
            "modules": {},
            "classes": {
                "PsyborgEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/PsyborgEventDispacther.ts": {
            "name": "src/psyborg/PsyborgEventDispacther.ts",
            "modules": {},
            "classes": {
                "PsyborgEventDispacther": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/StyleSheet.ts": {
            "name": "src/psyborg/StyleSheet.ts",
            "modules": {
                "psyborg": 1
            },
            "classes": {
                "StyleSheet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/Util.ts": {
            "name": "src/psyborg/Util.ts",
            "modules": {},
            "classes": {
                "Util": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/psyborg/Window.ts": {
            "name": "src/psyborg/Window.ts",
            "modules": {},
            "classes": {
                "Window": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/jquery.psyborg.ts": {
            "name": "src/jquery.psyborg.ts",
            "modules": {},
            "classes": {
                "jQuery": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "psyborg": {
            "name": "psyborg",
            "submodules": {},
            "classes": {
                "Psycle": 1,
                "PsycleContainer": 1,
                "PsyclePanel": 1,
                "PsyclePanelList": 1,
                "PsycleStage": 1,
                "PsycleTransition": 1,
                "PsyborgElement": 1,
                "PsyborgEvent": 1,
                "PsyborgEventDispacther": 1,
                "StyleSheet": 1,
                "Util": 1,
                "Window": 1,
                "jQuery": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/jquery.psyborg.ts",
            "line": 1,
            "description": "CSSを変換するラッパー関数郡"
        }
    },
    "classes": {
        "Psycle": {
            "name": "Psycle",
            "shortname": "Psycle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 2,
            "description": "スライド要素を生成・管理するクラス",
            "since": "0.1.0",
            "extends": "PsyborgElement",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "インスタンス化する要素",
                    "type": "JQuery"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Any",
                    "props": [
                        {
                            "name": "instanceKey",
                            "description": "`data`メソッドで取得できるインスタンスのキー文字列",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'psycle'"
                        },
                        {
                            "name": "startIndex",
                            "description": "最初に表示するパネル番号",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "transition",
                            "description": "トランジションの種類",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'slide'"
                        },
                        {
                            "name": "duration",
                            "description": "アニメーション時間",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "600"
                        },
                        {
                            "name": "easing",
                            "description": "トランジションのイージング",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'swing'"
                        },
                        {
                            "name": "delay",
                            "description": "オートプレイの時の待機時間",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "3000"
                        },
                        {
                            "name": "auto",
                            "description": "オートプレイかどうか",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "cancel",
                            "description": "アニメーション中にキャンセル可能かどうか（アニメーション中にパネル選択やパネル送りを上書きできるかどうか）",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "repeat",
                            "description": "繰り返しの種類(NONE: 繰り返ししない, RETURN: 最後まで到達すると最初に戻る, LOOP: ループしてるかのように最初に戻る（ループに対応しているトランジションのみ））",
                            "type": "Any",
                            "optional": true,
                            "optdefault": "PsycleRepeat.RETURN"
                        },
                        {
                            "name": "container",
                            "description": "コンテナを取得するためのセレクタ",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'>ul:eq(0)'"
                        },
                        {
                            "name": "panels",
                            "description": "パネルを取得するためのセレクタ（コンテナからのパス）",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'>li'"
                        },
                        {
                            "name": "currentClass",
                            "description": "現在のパネルに設定されるクラス名",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'current'"
                        },
                        {
                            "name": "delayWhenFire",
                            "description": "遷移処理が発生する(`before`関数から`fire`関数)までの遅延時間(ミリ秒)",
                            "type": "String",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "clone",
                            "description": "ループリピートにしたときの各要素に対してのクローン要素の数",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "2"
                        },
                        {
                            "name": "cols",
                            "description": "カラム(列)の数（カラム対応のトランジションのみ）",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "rows",
                            "description": "行の数（行対応のトランジションのみ）",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "offsetX",
                            "description": "コンテナの横方向のオフセット（コンテナが平行移動するトランジションのみ）",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "offsetY",
                            "description": "コンテナの縦方向のオフセット（コンテナが平行移動するトランジションのみ）",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "nearby",
                            "description": "???",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "innerFocus",
                            "description": "マルチカラムの時のフォーカスの当たり方が内側優先かどうか、noFocusがtrueの場合は無効",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "noFocus",
                            "description": "マルチカラムの時、パネルにフォーカスを当てない、また、indexは先頭の要素だけを指すことになる",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "resizable",
                            "description": "リサイズによってパネルの大きさが変わる場合はtrueを渡す",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "draggable",
                            "description": "ドラッグによって遷移をコントロールさせる場合はtrueを渡す",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "swipeable",
                            "description": "スワイプによって遷移をコントロールさせる場合はtrueを渡す",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "dragBlockVertical",
                            "description": "ドラッグの上下を抑制させる(タッチデバイスのスクロールも抑制される)場合はtrueを渡す",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "bindKeyboard",
                            "description": "キーボードで操作できるようにするかどうか",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "showOnlyOnce",
                            "description": "オートプレイの時に一度しか表示しないパネルのフィルタセレクタ (例) .once",
                            "type": "Any",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "controller",
                            "description": "コントローラ",
                            "type": "Any",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "marker",
                            "description": "マーカー",
                            "type": "Any",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "thumbnail",
                            "description": "サムネイル",
                            "type": "Any",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "css3",
                            "description": "???",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "loopCloneLength",
                            "description": "ループ時のスライド専用 クローンをいくつつくるか",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "scenes",
                            "description": "???",
                            "type": "Function[]",
                            "optional": true,
                            "optdefault": "["
                        }
                    ]
                }
            ]
        },
        "PsycleContainer": {
            "name": "PsycleContainer",
            "shortname": "PsycleContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "file": "src/psyborg/Psycle/PsycleContainer.ts",
            "line": 3,
            "description": "スライドショーコンテナ要素",
            "since": "0.1.0",
            "extends": "PsyborgElement",
            "is_constructor": 1
        },
        "PsyclePanel": {
            "name": "PsyclePanel",
            "shortname": "PsyclePanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "file": "src/psyborg/Psycle/PsyclePanelClone.ts",
            "line": 3,
            "description": "スライドショーパネルのクローン要素",
            "since": "0.1.0",
            "extends": "PsyborgElement",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "対象要素",
                    "type": "JQuery"
                },
                {
                    "name": "index",
                    "description": "パネル番号",
                    "type": "Number"
                },
                {
                    "name": "list",
                    "description": "パネル要素リスト",
                    "type": "PsyclePanelList"
                }
            ]
        },
        "PsyclePanelList": {
            "name": "PsyclePanelList",
            "shortname": "PsyclePanelList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 3,
            "description": "スライドショーパネル要素リスト",
            "since": "0.1.0",
            "extends": "PsyborgElement",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "対象要素",
                    "type": "JQuery"
                }
            ]
        },
        "PsycleStage": {
            "name": "PsycleStage",
            "shortname": "PsycleStage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "file": "src/psyborg/Psycle/PsycleStage.ts",
            "line": 3,
            "description": "スライドショーステージ要素",
            "since": "0.1.0",
            "extends": "PsyborgElement",
            "is_constructor": 1
        },
        "PsycleTransition": {
            "name": "PsycleTransition",
            "shortname": "PsycleTransition",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 3,
            "description": "遷移プロセス管理",
            "since": "0.1.0",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "トランジション名",
                    "type": "String"
                },
                {
                    "name": "process",
                    "description": "プロセス",
                    "type": "Object",
                    "props": [
                        {
                            "name": "init",
                            "description": "初期処理",
                            "type": "Object"
                        },
                        {
                            "name": "reflow",
                            "description": "リフロー処理",
                            "type": "Object"
                        },
                        {
                            "name": "silent",
                            "description": "非遷移変化処理",
                            "type": "Object"
                        },
                        {
                            "name": "before",
                            "description": "遷移前処理",
                            "type": "Object"
                        },
                        {
                            "name": "fire",
                            "description": "遷移時処理",
                            "type": "Object"
                        },
                        {
                            "name": "cancel",
                            "description": "キャンセル処理",
                            "type": "Object"
                        },
                        {
                            "name": "after",
                            "description": "遷移後処理",
                            "type": "Object"
                        }
                    ]
                }
            ]
        },
        "PsyborgElement": {
            "name": "PsyborgElement",
            "shortname": "PsyborgElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "file": "src/psyborg/PsyborgElement.ts",
            "line": 3,
            "description": "Psyborgで取り扱うDOM要素",
            "since": "0.1.0",
            "extends": "PsyborgEventDispacther",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "インスタンス化する要素",
                    "type": "JQuery"
                }
            ]
        },
        "PsyborgEvent": {
            "name": "PsyborgEvent",
            "shortname": "PsyborgEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "file": "src/psyborg/PsyborgEvent.ts",
            "line": 3,
            "description": "Psyborgで取り扱うイベントデータ",
            "since": "0.1.0",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "イベントの種類",
                    "type": "String"
                }
            ]
        },
        "PsyborgEventDispacther": {
            "name": "PsyborgEventDispacther",
            "shortname": "PsyborgEventDispacther",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "file": "src/psyborg/PsyborgEventDispacther.ts",
            "line": 3,
            "description": "Psyborgで取り扱うイベントディスパッチャ",
            "since": "0.1.0",
            "is_constructor": 1
        },
        "StyleSheet": {
            "name": "StyleSheet",
            "shortname": "StyleSheet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "file": "src/psyborg/StyleSheet.ts",
            "line": 3,
            "description": "CSSを変換するラッパー関数郡",
            "since": "0.1.0"
        },
        "Util": {
            "name": "Util",
            "shortname": "Util",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "namespace": "",
            "file": "src/psyborg/Util.ts",
            "line": 3,
            "description": "ユーティリティ関数郡",
            "since": "0.3.4"
        },
        "Window": {
            "name": "Window",
            "shortname": "Window",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "namespace": "",
            "file": "src/psyborg/Window.ts",
            "line": 3,
            "description": "ウィンドウ・ブラウザ/ユーザエージェントに関する操作をあつかう",
            "since": "0.4.3"
        },
        "jQuery": {
            "name": "jQuery",
            "shortname": "jQuery",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "psyborg",
            "namespace": "",
            "file": "src/jquery.psyborg.ts",
            "line": 1,
            "description": "jQueryの拡張"
        }
    },
    "classitems": [
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 21,
            "description": "Interface for the AJAX setting that will configure the AJAX request",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 25,
            "description": "The content type sent in the request header that tells the server what kind of response it will accept in return. If the accepts setting needs modification, it is recommended to do so once in the $.ajaxSetup() method.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 29,
            "description": "By default, all requests are sent asynchronously (i.e. this is set to true by default). If you need synchronous requests, set this option to false. Cross-domain requests and dataType: \"jsonp\" requests do not support synchronous operation. Note that synchronous requests may temporarily lock the browser, disabling any actions while the request is active. As of jQuery 1.8, the use of async: false with jqXHR ($.Deferred) is deprecated; you must use the success/error/complete callback options instead of the corresponding methods of the jqXHR object such as jqXHR.done() or the deprecated jqXHR.success().",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 33,
            "description": "A pre-request callback function that can be used to modify the jqXHR (in jQuery 1.4.x, XMLHTTPRequest) object before it is sent. Use this to set custom headers, etc. The jqXHR and settings objects are passed as arguments. This is an Ajax Event. Returning false in the beforeSend function will cancel the request. As of jQuery 1.5, the beforeSend option will be called regardless of the type of request.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 37,
            "description": "If set to false, it will force requested pages not to be cached by the browser. Note: Setting cache to false will only work correctly with HEAD and GET requests. It works by appending \"_={timestamp}\" to the GET parameters. The parameter is not needed for other types of requests, except in IE8 when a POST is made to a URL that has already been requested by a GET.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 41,
            "description": "A function to be called when the request finishes (after success and error callbacks are executed). The function gets passed two arguments: The jqXHR (in jQuery 1.4.x, XMLHTTPRequest) object and a string categorizing the status of the request (\"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", or \"parsererror\"). As of jQuery 1.5, the complete setting can accept an array of functions. Each function will be called in turn. This is an Ajax Event.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 45,
            "description": "An object of string/regular-expression pairs that determine how jQuery will parse the response, given its content type. (version added: 1.5)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 51,
            "description": "When sending data to the server, use this content type. Default is \"application/x-www-form-urlencoded; charset=UTF-8\", which is fine for most cases. If you explicitly pass in a content-type to $.ajax(), then it is always sent to the server (even if no data is sent). The W3C XMLHttpRequest specification dictates that the charset is always UTF-8; specifying another charset will not force the browser to change the encoding.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 55,
            "description": "This object will be made the context of all Ajax-related callbacks. By default, the context is an object that represents the ajax settings used in the call ($.ajaxSettings merged with the settings passed to $.ajax).",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 59,
            "description": "An object containing dataType-to-dataType converters. Each converter's value is a function that returns the transformed value of the response. (version added: 1.5)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 63,
            "description": "If you wish to force a crossDomain request (such as JSONP) on the same domain, set the value of crossDomain to true. This allows, for example, server-side redirection to another domain. (version added: 1.5)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 67,
            "description": "Data to be sent to the server. It is converted to a query string, if not already a string. It's appended to the url for GET-requests. See processData option to prevent this automatic processing. Object must be Key/Value pairs. If value is an Array, jQuery serializes multiple values with same key based on the value of the traditional setting (described below).",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 71,
            "description": "A function to be used to handle the raw response data of XMLHttpRequest.This is a pre-filtering function to sanitize the response. You should return the sanitized data. The function accepts two arguments: The raw data returned from the server and the 'dataType' parameter.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 75,
            "description": "The type of data that you're expecting back from the server. If none is specified, jQuery will try to infer it based on the MIME type of the response (an XML MIME type will yield XML, in 1.4 JSON will yield a JavaScript object, in 1.4 script will execute the script, and anything else will be returned as a string).",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 79,
            "description": "A function to be called if the request fails. The function receives three arguments: The jqXHR (in jQuery 1.4.x, XMLHttpRequest) object, a string describing the type of error that occurred and an optional exception object, if one occurred. Possible values for the second argument (besides null) are \"timeout\", \"error\", \"abort\", and \"parsererror\". When an HTTP error occurs, errorThrown receives the textual portion of the HTTP status, such as \"Not Found\" or \"Internal Server Error.\" As of jQuery 1.5, the error setting can accept an array of functions. Each function will be called in turn. Note: This handler is not called for cross-domain script and cross-domain JSONP requests. This is an Ajax Event.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 83,
            "description": "Whether to trigger global Ajax event handlers for this request. The default is true. Set to false to prevent the global handlers like ajaxStart or ajaxStop from being triggered. This can be used to control various Ajax Events.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 87,
            "description": "An object of additional header key/value pairs to send along with requests using the XMLHttpRequest transport. The header X-Requested-With: XMLHttpRequest is always added, but its default XMLHttpRequest value can be changed here. Values in the headers setting can also be overwritten from within the beforeSend function. (version added: 1.5)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 91,
            "description": "Allow the request to be successful only if the response has changed since the last request. This is done by checking the Last-Modified header. Default value is false, ignoring the header. In jQuery 1.4 this technique also checks the 'etag' specified by the server to catch unmodified data.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 95,
            "description": "Allow the current environment to be recognized as \"local,\" (e.g. the filesystem), even if jQuery does not recognize it as such by default. The following protocols are currently recognized as local: file, *-extension, and widget. If the isLocal setting needs modification, it is recommended to do so once in the $.ajaxSetup() method. (version added: 1.5.1)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 99,
            "description": "Override the callback function name in a jsonp request. This value will be used instead of 'callback' in the 'callback=?' part of the query string in the url. So {jsonp:'onJSONPLoad'} would result in 'onJSONPLoad=?' passed to the server. As of jQuery 1.5, setting the jsonp option to false prevents jQuery from adding the \"?callback\" string to the URL or attempting to use \"=?\" for transformation. In this case, you should also explicitly set the jsonpCallback setting. For example, { jsonp: false, jsonpCallback: \"callbackName\" }",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 103,
            "description": "Specify the callback function name for a JSONP request. This value will be used instead of the random name automatically generated by jQuery. It is preferable to let jQuery generate a unique name as it'll make it easier to manage the requests and provide callbacks and error handling. You may want to specify the callback when you want to enable better browser caching of GET requests. As of jQuery 1.5, you can also use a function for this setting, in which case the value of jsonpCallback is set to the return value of that function.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 107,
            "description": "A mime type to override the XHR mime type. (version added: 1.5.1)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 111,
            "description": "A password to be used with XMLHttpRequest in response to an HTTP access authentication request.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 115,
            "description": "By default, data passed in to the data option as an object (technically, anything other than a string) will be processed and transformed into a query string, fitting to the default content-type \"application/x-www-form-urlencoded\". If you want to send a DOMDocument, or other non-processed data, set this option to false.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 119,
            "description": "Only applies when the \"script\" transport is used (e.g., cross-domain requests with \"jsonp\" or \"script\" dataType and \"GET\" type). Sets the charset attribute on the script tag used in the request. Used when the character set on the local page is not the same as the one on the remote script.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 123,
            "description": "An object of numeric HTTP codes and functions to be called when the response has the corresponding code. f the request is successful, the status code functions take the same parameters as the success callback; if it results in an error (including 3xx redirect), they take the same parameters as the error callback. (version added: 1.5)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 127,
            "description": "A function to be called if the request succeeds. The function gets passed three arguments: The data returned from the server, formatted according to the dataType parameter; a string describing the status; and the jqXHR (in jQuery 1.4.x, XMLHttpRequest) object. As of jQuery 1.5, the success setting can accept an array of functions. Each function will be called in turn. This is an Ajax Event.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 131,
            "description": "Set a timeout (in milliseconds) for the request. This will override any global timeout set with $.ajaxSetup(). The timeout period starts at the point the $.ajax call is made; if several other requests are in progress and the browser has no connections available, it is possible for a request to time out before it can be sent. In jQuery 1.4.x and below, the XMLHttpRequest object will be in an invalid state if the request times out; accessing any object members may throw an exception. In Firefox 3.0+ only, script and JSONP requests cannot be cancelled by a timeout; the script will run even if it arrives after the timeout period.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 135,
            "description": "Set this to true if you wish to use the traditional style of param serialization.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 139,
            "description": "The type of request to make (\"POST\" or \"GET\"), default is \"GET\". Note: Other HTTP request methods, such as PUT and DELETE, can also be used here, but they are not supported by all browsers.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 143,
            "description": "A string containing the URL to which the request is sent.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 147,
            "description": "A username to be used with XMLHttpRequest in response to an HTTP access authentication request.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 151,
            "description": "Callback for creating the XMLHttpRequest object. Defaults to the ActiveXObject when available (IE), the XMLHttpRequest otherwise. Override to provide your own implementation for XMLHttpRequest or enhancements to the factory.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 155,
            "description": "An object of fieldName-fieldValue pairs to set on the native XHR object. For example, you can use it to set withCredentials to true for cross-domain requests if needed. In jQuery 1.5, the withCredentials property was not propagated to the native XHR and thus CORS requests requiring it would ignore this flag. For this reason, we recommend using jQuery 1.5.1+ should you require the use of it. (version added: 1.5.1)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 161,
            "description": "Interface for the jqXHR object",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 165,
            "description": "The .overrideMimeType() method may be used in the beforeSend() callback function, for example, to modify the response content-type header. As of jQuery 1.5.1, the jqXHR object also contains the overrideMimeType() method (it was available in jQuery 1.4.x, as well, but was temporarily removed in jQuery 1.5).",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 172,
            "description": "Interface for the JQuery callback",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 176,
            "description": "Add a callback or a collection of callbacks to a callback list.",
            "params": [
                {
                    "name": "callbacks",
                    "description": "A function, or array of functions, that are to be added to the callback list."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 182,
            "description": "Add a callback or a collection of callbacks to a callback list.",
            "params": [
                {
                    "name": "callbacks",
                    "description": "A function, or array of functions, that are to be added to the callback list."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 189,
            "description": "Disable a callback list from doing anything more.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 194,
            "description": "Determine if the callbacks list has been disabled.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 199,
            "description": "Remove all of the callbacks from a list.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 204,
            "description": "Call all of the callbacks with the given arguments",
            "params": [
                {
                    "name": "arguments",
                    "description": "The argument or list of arguments to pass back to the callback list."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 211,
            "description": "Determine if the callbacks have already been called at least once.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 216,
            "description": "Call all callbacks in a list with the given context and arguments.",
            "params": [
                {
                    "name": "context",
                    "description": "A reference to the context in which the callbacks in the list should be fired."
                },
                {
                    "name": "arguments",
                    "description": "An argument, or array of arguments, to pass to the callbacks in the list."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 224,
            "description": "Determine whether a supplied callback is in a list",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to search for."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 231,
            "description": "Lock a callback list in its current state.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 236,
            "description": "Determine if the callbacks list has been locked.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 241,
            "description": "Remove a callback or a collection of callbacks from a callback list.",
            "params": [
                {
                    "name": "callbacks",
                    "description": "A function, or array of functions, that are to be removed from the callback list."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 247,
            "description": "Remove a callback or a collection of callbacks from a callback list.",
            "params": [
                {
                    "name": "callbacks",
                    "description": "A function, or array of functions, that are to be removed from the callback list."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 406,
            "description": "Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.",
            "params": [
                {
                    "name": "obj",
                    "description": "An array or object to serialize."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 413,
            "description": "Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.",
            "params": [
                {
                    "name": "obj",
                    "description": "An array or object to serialize."
                },
                {
                    "name": "traditional",
                    "description": "A Boolean indicating whether to perform a traditional \"shallow\" serialization."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 422,
            "description": "The interface used to construct jQuery events (with $.Event). It is\ndefined separately instead of inline in JQueryStatic to allow\noverriding the construction function with specific strings\nreturning specific event objects.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 433,
            "description": "The interface used to specify coordinates.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 442,
            "description": "A string or number determining how long the animation will run.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 446,
            "description": "A string indicating which easing function to use for the transition.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 450,
            "description": "A function to call once the animation is complete.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 454,
            "description": "A function to be called for each animated property of each animated element. This function provides an opportunity to modify the Tween object to change the value of the property before it is set.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 458,
            "description": "A function to be called after each step of the animation, only once per animated element regardless of the number of animated properties. (version added: 1.8)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 462,
            "description": "A function to call when the animation begins. (version added: 1.8)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 466,
            "description": "A function to be called when the animation completes (its Promise object is resolved). (version added: 1.8)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 470,
            "description": "A function to be called when the animation fails to complete (its Promise object is rejected). (version added: 1.8)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 474,
            "description": "A function to be called when the animation completes or stops without completing (its Promise object is either resolved or rejected). (version added: 1.8)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 478,
            "description": "A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. As of jQuery 1.7, the queue option can also accept a string, in which case the animation is added to the queue represented by that string. When a custom queue name is used the animation does not automatically start; you must call .dequeue(\"queuename\") to start it.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 482,
            "description": "A map of one or more of the CSS properties defined by the properties argument and their corresponding easing functions. (version added: 1.4)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 488,
            "description": "The interface used to specify easing functions.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 496,
            "description": "Static members of jQuery (those on $ and jQuery themselves)",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 501,
            "description": "Perform an asynchronous HTTP (Ajax) request.",
            "params": [
                {
                    "name": "settings",
                    "description": "A set of key/value pairs that configure the Ajax request. All settings are optional. A default can be set for any option with $.ajaxSetup()."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 507,
            "description": "Perform an asynchronous HTTP (Ajax) request.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "settings",
                    "description": "A set of key/value pairs that configure the Ajax request. All settings are optional. A default can be set for any option with $.ajaxSetup()."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 515,
            "description": "Handle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax().",
            "params": [
                {
                    "name": "dataTypes",
                    "description": "An optional string containing one or more space-separated dataTypes"
                },
                {
                    "name": "handler",
                    "description": "A handler to set default values for future Ajax requests."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 522,
            "description": "Handle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax().",
            "params": [
                {
                    "name": "handler",
                    "description": "A handler to set default values for future Ajax requests."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 531,
            "description": "Set default values for future Ajax requests. Its use is not recommended.",
            "params": [
                {
                    "name": "options",
                    "description": "A set of key/value pairs that configure the default Ajax request. All options are optional."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 538,
            "description": "Load data from the server using a HTTP GET request.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "success",
                    "description": "A callback function that is executed if the request succeeds."
                },
                {
                    "name": "dataType",
                    "description": "The type of data expected from the server. Default: Intelligent Guess (xml, json, script, or html)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 546,
            "description": "Load data from the server using a HTTP GET request.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "data",
                    "description": "A plain object or string that is sent to the server with the request."
                },
                {
                    "name": "success",
                    "description": "A callback function that is executed if the request succeeds."
                },
                {
                    "name": "dataType",
                    "description": "The type of data expected from the server. Default: Intelligent Guess (xml, json, script, or html)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 555,
            "description": "Load data from the server using a HTTP GET request.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "data",
                    "description": "A plain object or string that is sent to the server with the request."
                },
                {
                    "name": "success",
                    "description": "A callback function that is executed if the request succeeds."
                },
                {
                    "name": "dataType",
                    "description": "The type of data expected from the server. Default: Intelligent Guess (xml, json, script, or html)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 564,
            "description": "Load JSON-encoded data from the server using a GET HTTP request.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "success",
                    "description": "A callback function that is executed if the request succeeds."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 571,
            "description": "Load JSON-encoded data from the server using a GET HTTP request.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "data",
                    "description": "A plain object or string that is sent to the server with the request."
                },
                {
                    "name": "success",
                    "description": "A callback function that is executed if the request succeeds."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 579,
            "description": "Load JSON-encoded data from the server using a GET HTTP request.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "data",
                    "description": "A plain object or string that is sent to the server with the request."
                },
                {
                    "name": "success",
                    "description": "A callback function that is executed if the request succeeds."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 587,
            "description": "Load a JavaScript file from the server using a GET HTTP request, then execute it.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "success",
                    "description": "A callback function that is executed if the request succeeds."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 595,
            "description": "Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 600,
            "description": "Load data from the server using a HTTP POST request.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "success",
                    "description": "A callback function that is executed if the request succeeds. Required if dataType is provided, but can be null in that case."
                },
                {
                    "name": "dataType",
                    "description": "The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 608,
            "description": "Load data from the server using a HTTP POST request.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "data",
                    "description": "A plain object or string that is sent to the server with the request."
                },
                {
                    "name": "success",
                    "description": "A callback function that is executed if the request succeeds. Required if dataType is provided, but can be null in that case."
                },
                {
                    "name": "dataType",
                    "description": "The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 617,
            "description": "Load data from the server using a HTTP POST request.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "data",
                    "description": "A plain object or string that is sent to the server with the request."
                },
                {
                    "name": "success",
                    "description": "A callback function that is executed if the request succeeds. Required if dataType is provided, but can be null in that case."
                },
                {
                    "name": "dataType",
                    "description": "The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 627,
            "description": "A multi-purpose callbacks list object that provides a powerful way to manage callback lists.",
            "params": [
                {
                    "name": "flags",
                    "description": "An optional list of space-separated flags that change how the callback list behaves."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 634,
            "description": "Holds or releases the execution of jQuery's ready event.",
            "params": [
                {
                    "name": "hold",
                    "description": "Indicates whether the ready hold is being requested or released"
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 641,
            "description": "Accepts a string containing a CSS selector which is then used to match a set of elements.",
            "params": [
                {
                    "name": "selector",
                    "description": "A string containing a selector expression"
                },
                {
                    "name": "context",
                    "description": "A DOM Element, Document, or jQuery to use as context"
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 648,
            "description": "Accepts a string containing a CSS selector which is then used to match a set of elements.",
            "params": [
                {
                    "name": "selector",
                    "description": "A string containing a selector expression"
                },
                {
                    "name": "context",
                    "description": "A DOM Element, Document, or jQuery to use as context"
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 655,
            "description": "Accepts a string containing a CSS selector which is then used to match a set of elements.",
            "params": [
                {
                    "name": "element",
                    "description": "A DOM element to wrap in a jQuery object."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 661,
            "description": "Accepts a string containing a CSS selector which is then used to match a set of elements.",
            "params": [
                {
                    "name": "elementArray",
                    "description": "An array containing a set of DOM elements to wrap in a jQuery object."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 667,
            "description": "Accepts a string containing a CSS selector which is then used to match a set of elements.",
            "params": [
                {
                    "name": "object",
                    "description": "A plain object to wrap in a jQuery object."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 673,
            "description": "Accepts a string containing a CSS selector which is then used to match a set of elements.",
            "params": [
                {
                    "name": "object",
                    "description": "An existing jQuery object to clone."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 679,
            "description": "Specify a function to execute when the DOM is fully loaded.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 684,
            "description": "Creates DOM elements on the fly from the provided string of raw HTML.",
            "params": [
                {
                    "name": "html",
                    "description": "A string of HTML to create on the fly. Note that this parses HTML, not XML."
                },
                {
                    "name": "ownerDocument",
                    "description": "A document in which the new elements will be created."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 691,
            "description": "Creates DOM elements on the fly from the provided string of raw HTML.",
            "params": [
                {
                    "name": "html",
                    "description": "A string defining a single, standalone, HTML element (e.g. <div/> or <div></div>)."
                },
                {
                    "name": "attributes",
                    "description": "An object of attributes, events, and methods to call on the newly-created element."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 699,
            "description": "Binds a function to be executed when the DOM has finished loading.",
            "params": [
                {
                    "name": "callback",
                    "description": "A function to execute after the DOM is ready."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 706,
            "description": "Relinquish jQuery's control of the $ variable.",
            "params": [
                {
                    "name": "removeAll",
                    "description": "A Boolean indicating whether to remove all jQuery variables from the global scope (including jQuery itself)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 713,
            "description": "Provides a way to execute callback functions based on one or more objects, usually Deferred objects that represent asynchronous events.",
            "params": [
                {
                    "name": "deferreds",
                    "description": "One or more Deferred objects, or plain JavaScript objects."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 719,
            "description": "Provides a way to execute callback functions based on one or more objects, usually Deferred objects that represent asynchronous events.",
            "params": [
                {
                    "name": "deferreds",
                    "description": "One or more Deferred objects, or plain JavaScript objects."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 725,
            "description": "Provides a way to execute callback functions based on one or more objects, usually Deferred objects that represent asynchronous events.",
            "params": [
                {
                    "name": "deferreds",
                    "description": "One or more Deferred objects, or plain JavaScript objects."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 732,
            "description": "Hook directly into jQuery to override how particular CSS properties are retrieved or set, normalize CSS property naming, or create custom properties.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 738,
            "description": "Store arbitrary data associated with the specified element. Returns the value that was set.",
            "params": [
                {
                    "name": "element",
                    "description": "The DOM element to associate with the data."
                },
                {
                    "name": "key",
                    "description": "A string naming the piece of data to set."
                },
                {
                    "name": "value",
                    "description": "The new data value."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 746,
            "description": "Returns value at named data store for the element, as set by jQuery.data(element, name, value), or the full data store for the element.",
            "params": [
                {
                    "name": "element",
                    "description": "The DOM element to associate with the data."
                },
                {
                    "name": "key",
                    "description": "A string naming the piece of data to set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 753,
            "description": "Returns value at named data store for the element, as set by jQuery.data(element, name, value), or the full data store for the element.",
            "params": [
                {
                    "name": "element",
                    "description": "The DOM element to associate with the data."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 760,
            "description": "Execute the next function on the queue for the matched element.",
            "params": [
                {
                    "name": "element",
                    "description": "A DOM element from which to remove and execute a queued function."
                },
                {
                    "name": "queueName",
                    "description": "A string containing the name of the queue. Defaults to fx, the standard effects queue."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 768,
            "description": "Determine whether an element has any jQuery data associated with it.",
            "params": [
                {
                    "name": "element",
                    "description": "A DOM element to be checked for data."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 775,
            "description": "Show the queue of functions to be executed on the matched element.",
            "params": [
                {
                    "name": "element",
                    "description": "A DOM element to inspect for an attached queue."
                },
                {
                    "name": "queueName",
                    "description": "A string containing the name of the queue. Defaults to fx, the standard effects queue."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 782,
            "description": "Manipulate the queue of functions to be executed on the matched element.",
            "params": [
                {
                    "name": "element",
                    "description": "A DOM element where the array of queued functions is attached."
                },
                {
                    "name": "queueName",
                    "description": "A string containing the name of the queue. Defaults to fx, the standard effects queue."
                },
                {
                    "name": "newQueue",
                    "description": "An array of functions to replace the current queue contents."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 790,
            "description": "Manipulate the queue of functions to be executed on the matched element.",
            "params": [
                {
                    "name": "element",
                    "description": "A DOM element on which to add a queued function."
                },
                {
                    "name": "queueName",
                    "description": "A string containing the name of the queue. Defaults to fx, the standard effects queue."
                },
                {
                    "name": "callback",
                    "description": "The new function to add to the queue."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 799,
            "description": "Remove a previously-stored piece of data.",
            "params": [
                {
                    "name": "element",
                    "description": "A DOM element from which to remove data."
                },
                {
                    "name": "name",
                    "description": "A string naming the piece of data to remove."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 807,
            "description": "A constructor function that returns a chainable utility object with methods to register multiple callbacks into callback queues, invoke callback queues, and relay the success or failure state of any synchronous or asynchronous function.",
            "params": [
                {
                    "name": "beforeStart",
                    "description": "A function that is called just before the constructor returns."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 814,
            "description": "Effects",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 819,
            "description": "The rate (in milliseconds) at which animations fire.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 825,
            "description": "Globally disable all animations.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 832,
            "description": "Takes a function and returns a new one that will always have a particular context.",
            "params": [
                {
                    "name": "fnction",
                    "description": "The function whose context will be changed."
                },
                {
                    "name": "context",
                    "description": "The object to which the context (this) of the function should be set."
                },
                {
                    "name": "additionalArguments",
                    "description": "Any number of arguments to be passed to the function referenced in the function argument."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 840,
            "description": "Takes a function and returns a new one that will always have a particular context.",
            "params": [
                {
                    "name": "context",
                    "description": "The object to which the context (this) of the function should be set."
                },
                {
                    "name": "name",
                    "description": "The name of the function whose context will be changed (should be a property of the context object)."
                },
                {
                    "name": "additionalArguments",
                    "description": "Any number of arguments to be passed to the function named in the name argument."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 851,
            "description": "Takes a string and throws an exception containing it.",
            "params": [
                {
                    "name": "message",
                    "description": "The message to send out."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 866,
            "description": "Check to see if a DOM element is a descendant of another DOM element.",
            "params": [
                {
                    "name": "container",
                    "description": "The DOM element that may contain the other element."
                },
                {
                    "name": "contained",
                    "description": "The DOM element that may be contained by (a descendant of) the other element."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 874,
            "description": "A generic iterator function, which can be used to seamlessly iterate over both objects and arrays. Arrays and array-like objects with a length property (such as a function's arguments object) are iterated by numeric index, from 0 to length-1. Other objects are iterated via their named properties.",
            "params": [
                {
                    "name": "collection",
                    "description": "The object or array to iterate over."
                },
                {
                    "name": "callback",
                    "description": "The function that will be executed on every object."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 885,
            "description": "A generic iterator function, which can be used to seamlessly iterate over both objects and arrays. Arrays and array-like objects with a length property (such as a function's arguments object) are iterated by numeric index, from 0 to length-1. Other objects are iterated via their named properties.",
            "params": [
                {
                    "name": "collection",
                    "description": "The object or array to iterate over."
                },
                {
                    "name": "callback",
                    "description": "The function that will be executed on every object."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 896,
            "description": "Merge the contents of two or more objects together into the first object.",
            "params": [
                {
                    "name": "target",
                    "description": "An object that will receive the new properties if additional objects are passed in or that will extend the jQuery namespace if it is the sole argument."
                },
                {
                    "name": "object1",
                    "description": "An object containing additional properties to merge in."
                },
                {
                    "name": "objectN",
                    "description": "Additional objects containing properties to merge in."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 904,
            "description": "Merge the contents of two or more objects together into the first object.",
            "params": [
                {
                    "name": "deep",
                    "description": "If true, the merge becomes recursive (aka. deep copy)."
                },
                {
                    "name": "target",
                    "description": "The object to extend. It will receive the new properties."
                },
                {
                    "name": "object1",
                    "description": "An object containing additional properties to merge in."
                },
                {
                    "name": "objectN",
                    "description": "Additional objects containing properties to merge in."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 914,
            "description": "Execute some JavaScript code globally.",
            "params": [
                {
                    "name": "code",
                    "description": "The JavaScript code to execute."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 921,
            "description": "Finds the elements of an array which satisfy a filter function. The original array is not affected.",
            "params": [
                {
                    "name": "array",
                    "description": "The array to search through."
                },
                {
                    "name": "func",
                    "description": "The function to process each item against. The first argument to the function is the item, and the second argument is the index. The function should return a Boolean value.  this will be the global window object."
                },
                {
                    "name": "invert",
                    "description": "If \"invert\" is false, or not provided, then the function returns an array consisting of all elements for which \"callback\" returns true. If \"invert\" is true, then the function returns an array consisting of all elements for which \"callback\" returns false."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 930,
            "description": "Search for a specified value within an array and return its index (or -1 if not found).",
            "params": [
                {
                    "name": "value",
                    "description": "The value to search for."
                },
                {
                    "name": "array",
                    "description": "An array through which to search."
                },
                {
                    "name": "fromIndex",
                    "description": "he index of the array at which to begin the search. The default is 0, which will search the whole array."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 939,
            "description": "Determine whether the argument is an array.",
            "params": [
                {
                    "name": "obj",
                    "description": "Object to test whether or not it is an array."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 945,
            "description": "Check to see if an object is empty (contains no enumerable properties).",
            "params": [
                {
                    "name": "obj",
                    "description": "The object that will be checked to see if it's empty."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 951,
            "description": "Determine if the argument passed is a Javascript function object.",
            "params": [
                {
                    "name": "obj",
                    "description": "Object to test whether or not it is a function."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 957,
            "description": "Determines whether its argument is a number.",
            "params": [
                {
                    "name": "obj",
                    "description": "The value to be tested."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 963,
            "description": "Check to see if an object is a plain object (created using \"{}\" or \"new Object\").",
            "params": [
                {
                    "name": "obj",
                    "description": "The object that will be checked to see if it's a plain object."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 969,
            "description": "Determine whether the argument is a window.",
            "params": [
                {
                    "name": "obj",
                    "description": "Object to test whether or not it is a window."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 975,
            "description": "Check to see if a DOM node is within an XML document (or is an XML document).",
            "params": [
                {
                    "name": "node",
                    "description": "he DOM node that will be checked to see if it's in an XML document."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 982,
            "description": "Convert an array-like object into a true JavaScript array.",
            "params": [
                {
                    "name": "obj",
                    "description": "Any object to turn into a native Array."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 989,
            "description": "Translate all items in an array or object to new array of items.",
            "params": [
                {
                    "name": "array",
                    "description": "The Array to translate."
                },
                {
                    "name": "callback",
                    "description": "The function to process each item against. The first argument to the function is the array item, the second argument is the index in array The function can return any value. Within the function, this refers to the global (window) object."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 996,
            "description": "Translate all items in an array or object to new array of items.",
            "params": [
                {
                    "name": "arrayOrObject",
                    "description": "The Array or Object to translate."
                },
                {
                    "name": "callback",
                    "description": "The function to process each item against. The first argument to the function is the value; the second argument is the index or key of the array or object property. The function can return any value to add to the array. A returned array will be flattened into the resulting array. Within the function, this refers to the global (window) object."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1004,
            "description": "Merge the contents of two arrays together into the first array.",
            "params": [
                {
                    "name": "first",
                    "description": "The first array to merge, the elements of second added."
                },
                {
                    "name": "second",
                    "description": "The second array to merge into the first, unaltered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1012,
            "description": "An empty function.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1017,
            "description": "Return a number representing the current time.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1022,
            "description": "Takes a well-formed JSON string and returns the resulting JavaScript object.",
            "params": [
                {
                    "name": "json",
                    "description": "The JSON string to parse."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1029,
            "description": "Parses a string into an XML document.",
            "params": [
                {
                    "name": "data",
                    "description": "a well-formed XML string to be parsed"
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1036,
            "description": "Remove the whitespace from the beginning and end of a string.",
            "params": [
                {
                    "name": "str",
                    "description": "Remove the whitespace from the beginning and end of a string."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1043,
            "description": "Determine the internal JavaScript [[Class]] of an object.",
            "params": [
                {
                    "name": "obj",
                    "description": "Object to get the internal JavaScript [[Class]] of."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1050,
            "description": "Sorts an array of DOM elements, in place, with the duplicates removed. Note that this only works on arrays of DOM elements, not strings or numbers.",
            "params": [
                {
                    "name": "array",
                    "description": "The Array of DOM elements."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1057,
            "description": "Parses a string into an array of DOM nodes.",
            "params": [
                {
                    "name": "data",
                    "description": "HTML string to be parsed"
                },
                {
                    "name": "context",
                    "description": "DOM element to serve as the context in which the HTML fragment will be created"
                },
                {
                    "name": "keepScripts",
                    "description": "A Boolean indicating whether to include scripts passed in the HTML string"
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1067,
            "description": "The jQuery instance members",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1071,
            "description": "Register a handler to be called when Ajax requests complete. This is an AjaxEvent.",
            "params": [
                {
                    "name": "handler",
                    "description": "The function to be invoked."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1077,
            "description": "Register a handler to be called when Ajax requests complete with an error. This is an Ajax Event.",
            "params": [
                {
                    "name": "handler",
                    "description": "The function to be invoked."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1083,
            "description": "Attach a function to be executed before an Ajax request is sent. This is an Ajax Event.",
            "params": [
                {
                    "name": "handler",
                    "description": "The function to be invoked."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1089,
            "description": "Register a handler to be called when the first Ajax request begins. This is an Ajax Event.",
            "params": [
                {
                    "name": "handler",
                    "description": "The function to be invoked."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1095,
            "description": "Register a handler to be called when all Ajax requests have completed. This is an Ajax Event.",
            "params": [
                {
                    "name": "handler",
                    "description": "The function to be invoked."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1101,
            "description": "Attach a function to be executed whenever an Ajax request completes successfully. This is an Ajax Event.",
            "params": [
                {
                    "name": "handler",
                    "description": "The function to be invoked."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1108,
            "description": "Load data from the server and place the returned HTML into the matched element.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "data",
                    "description": "A plain object or string that is sent to the server with the request."
                },
                {
                    "name": "complete",
                    "description": "A callback function that is executed when the request completes."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1116,
            "description": "Load data from the server and place the returned HTML into the matched element.",
            "params": [
                {
                    "name": "url",
                    "description": "A string containing the URL to which the request is sent."
                },
                {
                    "name": "data",
                    "description": "A plain object or string that is sent to the server with the request."
                },
                {
                    "name": "complete",
                    "description": "A callback function that is executed when the request completes."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1125,
            "description": "Encode a set of form elements as a string for submission.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1129,
            "description": "Encode a set of form elements as an array of names and values.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1134,
            "description": "Adds the specified class(es) to each of the set of matched elements.",
            "params": [
                {
                    "name": "className",
                    "description": "One or more space-separated classes to be added to the class attribute of each matched element."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1140,
            "description": "Adds the specified class(es) to each of the set of matched elements.",
            "params": [
                {
                    "name": "function",
                    "description": "A function returning one or more space-separated class names to be added to the existing class name(s). Receives the index position of the element in the set and the existing class name(s) as arguments. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1147,
            "description": "Add the previous set of elements on the stack to the current set, optionally filtered by a selector.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1152,
            "description": "Get the value of an attribute for the first element in the set of matched elements.",
            "params": [
                {
                    "name": "attributeName",
                    "description": "The name of the attribute to get."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1158,
            "description": "Set one or more attributes for the set of matched elements.",
            "params": [
                {
                    "name": "attributeName",
                    "description": "The name of the attribute to set."
                },
                {
                    "name": "value",
                    "description": "A value to set for the attribute."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1165,
            "description": "Set one or more attributes for the set of matched elements.",
            "params": [
                {
                    "name": "attributeName",
                    "description": "The name of the attribute to set."
                },
                {
                    "name": "value",
                    "description": "A value to set for the attribute."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1172,
            "description": "Set one or more attributes for the set of matched elements.",
            "params": [
                {
                    "name": "attributeName",
                    "description": "The name of the attribute to set."
                },
                {
                    "name": "func",
                    "description": "A function returning the value to set. this is the current element. Receives the index position of the element in the set and the old attribute value as arguments."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1179,
            "description": "Set one or more attributes for the set of matched elements.",
            "params": [
                {
                    "name": "attributes",
                    "description": "An object of attribute-value pairs to set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1186,
            "description": "Determine whether any of the matched elements are assigned the given class.",
            "params": [
                {
                    "name": "className",
                    "description": "The class name to search for."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1193,
            "description": "Get the HTML contents of the first element in the set of matched elements.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1197,
            "description": "Set the HTML contents of each element in the set of matched elements.",
            "params": [
                {
                    "name": "htmlString",
                    "description": "A string of HTML to set as the content of each matched element."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1203,
            "description": "Set the HTML contents of each element in the set of matched elements.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the HTML content to set. Receives the index position of the element in the set and the old HTML value as arguments. jQuery empties the element before calling the function; use the oldhtml argument to reference the previous content. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1209,
            "description": "Set the HTML contents of each element in the set of matched elements.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the HTML content to set. Receives the index position of the element in the set and the old HTML value as arguments. jQuery empties the element before calling the function; use the oldhtml argument to reference the previous content. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1215,
            "description": "Get the value of a property for the first element in the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "The name of the property to get."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1221,
            "description": "Set one or more properties for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "The name of the property to set."
                },
                {
                    "name": "value",
                    "description": "A value to set for the property."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1228,
            "description": "Set one or more properties for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "The name of the property to set."
                },
                {
                    "name": "value",
                    "description": "A value to set for the property."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1235,
            "description": "Set one or more properties for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "The name of the property to set."
                },
                {
                    "name": "value",
                    "description": "A value to set for the property."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1242,
            "description": "Set one or more properties for the set of matched elements.",
            "params": [
                {
                    "name": "properties",
                    "description": "An object of property-value pairs to set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1248,
            "description": "Set one or more properties for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "The name of the property to set."
                },
                {
                    "name": "func",
                    "description": "A function returning the value to set. Receives the index position of the element in the set and the old property value as arguments. Within the function, the keyword this refers to the current element."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1256,
            "description": "Remove an attribute from each element in the set of matched elements.",
            "params": [
                {
                    "name": "attributeName",
                    "description": "An attribute to remove; as of version 1.7, it can be a space-separated list of attributes."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1263,
            "description": "Remove a single class, multiple classes, or all classes from each element in the set of matched elements.",
            "params": [
                {
                    "name": "className",
                    "description": "One or more space-separated classes to be removed from the class attribute of each matched element."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1269,
            "description": "Remove a single class, multiple classes, or all classes from each element in the set of matched elements.",
            "params": [
                {
                    "name": "function",
                    "description": "A function returning one or more space-separated class names to be removed. Receives the index position of the element in the set and the old class value as arguments."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1276,
            "description": "Remove a property for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "The name of the property to remove."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1283,
            "description": "Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.",
            "params": [
                {
                    "name": "className",
                    "description": "One or more class names (separated by spaces) to be toggled for each element in the matched set."
                },
                {
                    "name": "swtch",
                    "description": "A Boolean (not just truthy/falsy) value to determine whether the class should be added or removed."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1290,
            "description": "Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.",
            "params": [
                {
                    "name": "swtch",
                    "description": "A boolean value to determine whether the class should be added or removed."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1296,
            "description": "Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.",
            "params": [
                {
                    "name": "func",
                    "description": "A function that returns class names to be toggled in the class attribute of each element in the matched set. Receives the index position of the element in the set, the old class value, and the switch as arguments."
                },
                {
                    "name": "swtch",
                    "description": "A boolean value to determine whether the class should be added or removed."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1304,
            "description": "Get the current value of the first element in the set of matched elements.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1308,
            "description": "Set the value of each element in the set of matched elements.",
            "params": [
                {
                    "name": "value",
                    "description": "A string of text or an array of strings corresponding to the value of each matched element to set as selected/checked."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1314,
            "description": "Set the value of each element in the set of matched elements.",
            "params": [
                {
                    "name": "value",
                    "description": "A string of text or an array of strings corresponding to the value of each matched element to set as selected/checked."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1320,
            "description": "Set the value of each element in the set of matched elements.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the value to set. this is the current element. Receives the index position of the element in the set and the old value as arguments."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1327,
            "description": "Get the value of style properties for the first element in the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "A CSS property."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1333,
            "description": "Set one or more CSS properties for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "A CSS property name."
                },
                {
                    "name": "value",
                    "description": "A value to set for the property."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1340,
            "description": "Set one or more CSS properties for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "A CSS property name."
                },
                {
                    "name": "value",
                    "description": "A value to set for the property."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1347,
            "description": "Set one or more CSS properties for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "A CSS property name."
                },
                {
                    "name": "value",
                    "description": "A value to set for the property."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1354,
            "description": "Set one or more CSS properties for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "A CSS property name."
                },
                {
                    "name": "value",
                    "description": "A value to set for the property."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1361,
            "description": "Set one or more CSS properties for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "A CSS property name."
                },
                {
                    "name": "value",
                    "description": "A function returning the value to set. this is the current element. Receives the index position of the element in the set and the old value as arguments."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1368,
            "description": "Set one or more CSS properties for the set of matched elements.",
            "params": [
                {
                    "name": "propertyName",
                    "description": "A CSS property name."
                },
                {
                    "name": "value",
                    "description": "A function returning the value to set. this is the current element. Receives the index position of the element in the set and the old value as arguments."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1375,
            "description": "Set one or more CSS properties for the set of matched elements.",
            "params": [
                {
                    "name": "properties",
                    "description": "An object of property-value pairs to set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1382,
            "description": "Get the current computed height for the first element in the set of matched elements.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1386,
            "description": "Set the CSS height of every matched element.",
            "params": [
                {
                    "name": "value",
                    "description": "An integer representing the number of pixels, or an integer with an optional unit of measure appended (as a string)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1392,
            "description": "Set the CSS height of every matched element.",
            "params": [
                {
                    "name": "value",
                    "description": "An integer representing the number of pixels, or an integer with an optional unit of measure appended (as a string)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1398,
            "description": "Set the CSS height of every matched element.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the height to set. Receives the index position of the element in the set and the old height as arguments. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1404,
            "description": "Set the CSS height of every matched element.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the height to set. Receives the index position of the element in the set and the old height as arguments. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1410,
            "description": "Set the CSS height of every matched element.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the height to set. Receives the index position of the element in the set and the old height as arguments. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1416,
            "description": "Set the CSS height of every matched element.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the height to set. Receives the index position of the element in the set and the old height as arguments. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1423,
            "description": "Get the current computed height for the first element in the set of matched elements, including padding but not border.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1428,
            "description": "Get the current computed width for the first element in the set of matched elements, including padding but not border.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1433,
            "description": "Get the current coordinates of the first element in the set of matched elements, relative to the document.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1437,
            "description": "An object containing the properties top and left, which are integers indicating the new top and left coordinates for the elements.",
            "params": [
                {
                    "name": "coordinates",
                    "description": "An object containing the properties top and left, which are integers indicating the new top and left coordinates for the elements."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1443,
            "description": "An object containing the properties top and left, which are integers indicating the new top and left coordinates for the elements.",
            "params": [
                {
                    "name": "func",
                    "description": "A function to return the coordinates to set. Receives the index of the element in the collection as the first argument and the current coordinates as the second argument. The function should return an object with the new top and left properties."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1450,
            "description": "Get the current computed height for the first element in the set of matched elements, including padding, border, and optionally margin. Returns an integer (without \"px\") representation of the value or null if called on an empty set of elements.",
            "params": [
                {
                    "name": "includeMargin",
                    "description": "A Boolean indicating whether to include the element's margin in the calculation."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1457,
            "description": "Get the current computed width for the first element in the set of matched elements, including padding and border.",
            "params": [
                {
                    "name": "includeMargin",
                    "description": "A Boolean indicating whether to include the element's margin in the calculation."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1464,
            "description": "Get the current coordinates of the first element in the set of matched elements, relative to the offset parent.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1469,
            "description": "Get the current horizontal position of the scroll bar for the first element in the set of matched elements or set the horizontal position of the scroll bar for every matched element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1473,
            "description": "Set the current horizontal position of the scroll bar for each of the set of matched elements.",
            "params": [
                {
                    "name": "value",
                    "description": "An integer indicating the new position to set the scroll bar to."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1480,
            "description": "Get the current vertical position of the scroll bar for the first element in the set of matched elements or set the vertical position of the scroll bar for every matched element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1484,
            "description": "Set the current vertical position of the scroll bar for each of the set of matched elements.",
            "params": [
                {
                    "name": "value",
                    "description": "An integer indicating the new position to set the scroll bar to."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1491,
            "description": "Get the current computed width for the first element in the set of matched elements.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1495,
            "description": "Set the CSS width of each element in the set of matched elements.",
            "params": [
                {
                    "name": "value",
                    "description": "An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1501,
            "description": "Set the CSS width of each element in the set of matched elements.",
            "params": [
                {
                    "name": "value",
                    "description": "An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1507,
            "description": "Set the CSS width of each element in the set of matched elements.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the width to set. Receives the index position of the element in the set and the old width as arguments. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1513,
            "description": "Set the CSS width of each element in the set of matched elements.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the width to set. Receives the index position of the element in the set and the old width as arguments. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1519,
            "description": "Set the CSS width of each element in the set of matched elements.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the width to set. Receives the index position of the element in the set and the old width as arguments. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1525,
            "description": "Set the CSS width of each element in the set of matched elements.",
            "params": [
                {
                    "name": "func",
                    "description": "A function returning the width to set. Receives the index position of the element in the set and the old width as arguments. Within the function, this refers to the current element in the set."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1532,
            "description": "Remove from the queue all items that have not yet been run.",
            "params": [
                {
                    "name": "queueName",
                    "description": "A string containing the name of the queue. Defaults to fx, the standard effects queue."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1539,
            "description": "Store arbitrary data associated with the matched elements.",
            "params": [
                {
                    "name": "key",
                    "description": "A string naming the piece of data to set."
                },
                {
                    "name": "value",
                    "description": "The new data value; it can be any Javascript type including Array or Object."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1546,
            "description": "Store arbitrary data associated with the matched elements.",
            "params": [
                {
                    "name": "obj",
                    "description": "An object of key-value pairs of data to update."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1552,
            "description": "Return the value at the named data store for the first element in the jQuery collection, as set by data(name, value) or by an HTML5 data-* attribute.",
            "params": [
                {
                    "name": "key",
                    "description": "Name of the data stored."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1558,
            "description": "Return the value at the named data store for the first element in the jQuery collection, as set by data(name, value) or by an HTML5 data-* attribute.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1563,
            "description": "Execute the next function on the queue for the matched elements.",
            "params": [
                {
                    "name": "queueName",
                    "description": "A string containing the name of the queue. Defaults to fx, the standard effects queue."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1570,
            "description": "Remove a previously-stored piece of data.",
            "params": [
                {
                    "name": "name",
                    "description": "A string naming the piece of data to delete or space-separated string naming the pieces of data to delete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1576,
            "description": "Remove a previously-stored piece of data.",
            "params": [
                {
                    "name": "list",
                    "description": "An array of strings naming the pieces of data to delete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1583,
            "description": "Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.",
            "params": [
                {
                    "name": "type",
                    "description": "The type of queue that needs to be observed. (default: fx)"
                },
                {
                    "name": "target",
                    "description": "Object onto which the promise methods have to be attached"
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1591,
            "description": "Perform a custom animation of a set of CSS properties.",
            "params": [
                {
                    "name": "properties",
                    "description": "An object of CSS properties and values that the animation will move toward."
                },
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1599,
            "description": "Perform a custom animation of a set of CSS properties.",
            "params": [
                {
                    "name": "properties",
                    "description": "An object of CSS properties and values that the animation will move toward."
                },
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1607,
            "description": "Perform a custom animation of a set of CSS properties.",
            "params": [
                {
                    "name": "properties",
                    "description": "An object of CSS properties and values that the animation will move toward."
                },
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition. (default: swing)"
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1616,
            "description": "Perform a custom animation of a set of CSS properties.",
            "params": [
                {
                    "name": "properties",
                    "description": "An object of CSS properties and values that the animation will move toward."
                },
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition. (default: swing)"
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1625,
            "description": "Perform a custom animation of a set of CSS properties.",
            "params": [
                {
                    "name": "properties",
                    "description": "An object of CSS properties and values that the animation will move toward."
                },
                {
                    "name": "options",
                    "description": "A map of additional options to pass to the method."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1633,
            "description": "Set a timer to delay execution of subsequent items in the queue.",
            "params": [
                {
                    "name": "duration",
                    "description": "An integer indicating the number of milliseconds to delay execution of the next item in the queue."
                },
                {
                    "name": "queueName",
                    "description": "A string containing the name of the queue. Defaults to fx, the standard effects queue."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1641,
            "description": "Display the matched elements by fading them to opaque.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1648,
            "description": "Display the matched elements by fading them to opaque.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1655,
            "description": "Display the matched elements by fading them to opaque.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1663,
            "description": "Display the matched elements by fading them to opaque.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1671,
            "description": "Display the matched elements by fading them to opaque.",
            "params": [
                {
                    "name": "options",
                    "description": "A map of additional options to pass to the method."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1678,
            "description": "Hide the matched elements by fading them to transparent.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1685,
            "description": "Hide the matched elements by fading them to transparent.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1692,
            "description": "Hide the matched elements by fading them to transparent.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1700,
            "description": "Hide the matched elements by fading them to transparent.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1708,
            "description": "Hide the matched elements by fading them to transparent.",
            "params": [
                {
                    "name": "options",
                    "description": "A map of additional options to pass to the method."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1715,
            "description": "Adjust the opacity of the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "opacity",
                    "description": "A number between 0 and 1 denoting the target opacity."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1723,
            "description": "Adjust the opacity of the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "opacity",
                    "description": "A number between 0 and 1 denoting the target opacity."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1731,
            "description": "Adjust the opacity of the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "opacity",
                    "description": "A number between 0 and 1 denoting the target opacity."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1740,
            "description": "Adjust the opacity of the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "opacity",
                    "description": "A number between 0 and 1 denoting the target opacity."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1750,
            "description": "Display or hide the matched elements by animating their opacity.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1757,
            "description": "Display or hide the matched elements by animating their opacity.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1764,
            "description": "Display or hide the matched elements by animating their opacity.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1772,
            "description": "Display or hide the matched elements by animating their opacity.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1780,
            "description": "Display or hide the matched elements by animating their opacity.",
            "params": [
                {
                    "name": "options",
                    "description": "A map of additional options to pass to the method."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1787,
            "description": "Stop the currently-running animation, remove all queued animations, and complete all animations for the matched elements.",
            "params": [
                {
                    "name": "queue",
                    "description": "The name of the queue in which to stop animations."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1794,
            "description": "Hide the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1801,
            "description": "Hide the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1808,
            "description": "Hide the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1816,
            "description": "Hide the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1824,
            "description": "Hide the matched elements.",
            "params": [
                {
                    "name": "options",
                    "description": "A map of additional options to pass to the method."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1831,
            "description": "Display the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1838,
            "description": "Display the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1845,
            "description": "Display the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1853,
            "description": "Display the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1861,
            "description": "Display the matched elements.",
            "params": [
                {
                    "name": "options",
                    "description": "A map of additional options to pass to the method."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1868,
            "description": "Display the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1875,
            "description": "Display the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1882,
            "description": "Display the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1890,
            "description": "Display the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1898,
            "description": "Display the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "options",
                    "description": "A map of additional options to pass to the method."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1905,
            "description": "Display or hide the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1912,
            "description": "Display or hide the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1919,
            "description": "Display or hide the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1927,
            "description": "Display or hide the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1935,
            "description": "Display or hide the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "options",
                    "description": "A map of additional options to pass to the method."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1942,
            "description": "Hide the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1949,
            "description": "Hide the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1956,
            "description": "Hide the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1964,
            "description": "Hide the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1972,
            "description": "Hide the matched elements with a sliding motion.",
            "params": [
                {
                    "name": "options",
                    "description": "A map of additional options to pass to the method."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1979,
            "description": "Stop the currently-running animation on the matched elements.",
            "params": [
                {
                    "name": "clearQueue",
                    "description": "A Boolean indicating whether to remove queued animation as well. Defaults to false."
                },
                {
                    "name": "jumpToEnd",
                    "description": "A Boolean indicating whether to complete the current animation immediately. Defaults to false."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1986,
            "description": "Stop the currently-running animation on the matched elements.",
            "params": [
                {
                    "name": "queue",
                    "description": "The name of the queue in which to stop animations."
                },
                {
                    "name": "clearQueue",
                    "description": "A Boolean indicating whether to remove queued animation as well. Defaults to false."
                },
                {
                    "name": "jumpToEnd",
                    "description": "A Boolean indicating whether to complete the current animation immediately. Defaults to false."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 1995,
            "description": "Display or hide the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2002,
            "description": "Display or hide the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2009,
            "description": "Display or hide the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2017,
            "description": "Display or hide the matched elements.",
            "params": [
                {
                    "name": "duration",
                    "description": "A string or number determining how long the animation will run."
                },
                {
                    "name": "easing",
                    "description": "A string indicating which easing function to use for the transition."
                },
                {
                    "name": "complete",
                    "description": "A function to call once the animation is complete."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2025,
            "description": "Display or hide the matched elements.",
            "params": [
                {
                    "name": "options",
                    "description": "A map of additional options to pass to the method."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2031,
            "description": "Display or hide the matched elements.",
            "params": [
                {
                    "name": "showOrHide",
                    "description": "A Boolean indicating whether to show or hide the elements."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2048,
            "description": "Trigger the \"change\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2052,
            "description": "Bind an event handler to the \"change\" JavaScript event",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2058,
            "description": "Bind an event handler to the \"change\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2066,
            "description": "Trigger the \"click\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2070,
            "description": "Bind an event handler to the \"click\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2076,
            "description": "Bind an event handler to the \"click\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2084,
            "description": "Trigger the \"dblclick\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2088,
            "description": "Bind an event handler to the \"dblclick\" JavaScript event",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2094,
            "description": "Bind an event handler to the \"dblclick\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2104,
            "description": "Trigger the \"focus\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2108,
            "description": "Bind an event handler to the \"focus\" JavaScript event",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2114,
            "description": "Bind an event handler to the \"focus\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2122,
            "description": "Bind an event handler to the \"focusin\" JavaScript event",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2128,
            "description": "Bind an event handler to the \"focusin\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2136,
            "description": "Bind an event handler to the \"focusout\" JavaScript event",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2142,
            "description": "Bind an event handler to the \"focusout\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2150,
            "description": "Bind two handlers to the matched elements, to be executed when the mouse pointer enters and leaves the elements.",
            "params": [
                {
                    "name": "handlerIn",
                    "description": "A function to execute when the mouse pointer enters the element."
                },
                {
                    "name": "handlerOut",
                    "description": "A function to execute when the mouse pointer leaves the element."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2157,
            "description": "Bind a single handler to the matched elements, to be executed when the mouse pointer enters or leaves the elements.",
            "params": [
                {
                    "name": "handlerInOut",
                    "description": "A function to execute when the mouse pointer enters or leaves the element."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2164,
            "description": "Trigger the \"keydown\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2168,
            "description": "Bind an event handler to the \"keydown\" JavaScript event",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2174,
            "description": "Bind an event handler to the keydown\"\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2182,
            "description": "Trigger the \"keypress\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2186,
            "description": "Bind an event handler to the \"keypress\" JavaScript event",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2192,
            "description": "Bind an event handler to the \"keypress\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2200,
            "description": "Trigger the \"keyup\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2204,
            "description": "Bind an event handler to the \"keyup\" JavaScript event",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2210,
            "description": "Bind an event handler to the \"keyup\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2218,
            "description": "Bind an event handler to the \"load\" JavaScript event.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2224,
            "description": "Bind an event handler to the \"load\" JavaScript event.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2232,
            "description": "Trigger the \"mousedown\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2236,
            "description": "Bind an event handler to the \"mousedown\" JavaScript event.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2242,
            "description": "Bind an event handler to the \"mousedown\" JavaScript event.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2250,
            "description": "Trigger the \"mouseenter\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2254,
            "description": "Bind an event handler to be fired when the mouse enters an element.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2260,
            "description": "Bind an event handler to be fired when the mouse enters an element.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2268,
            "description": "Trigger the \"mouseleave\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2272,
            "description": "Bind an event handler to be fired when the mouse leaves an element.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2278,
            "description": "Bind an event handler to be fired when the mouse leaves an element.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2286,
            "description": "Trigger the \"mousemove\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2290,
            "description": "Bind an event handler to the \"mousemove\" JavaScript event.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2296,
            "description": "Bind an event handler to the \"mousemove\" JavaScript event.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2304,
            "description": "Trigger the \"mouseout\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2308,
            "description": "Bind an event handler to the \"mouseout\" JavaScript event.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2314,
            "description": "Bind an event handler to the \"mouseout\" JavaScript event.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2322,
            "description": "Trigger the \"mouseover\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2326,
            "description": "Bind an event handler to the \"mouseover\" JavaScript event.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2332,
            "description": "Bind an event handler to the \"mouseover\" JavaScript event.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2340,
            "description": "Trigger the \"mouseup\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2344,
            "description": "Bind an event handler to the \"mouseup\" JavaScript event.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2350,
            "description": "Bind an event handler to the \"mouseup\" JavaScript event.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2358,
            "description": "Remove an event handler.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2362,
            "description": "Remove an event handler.",
            "params": [
                {
                    "name": "events",
                    "description": "One or more space-separated event types and optional namespaces, or just namespaces, such as \"click\", \"keydown.myPlugin\", or \".myPlugin\"."
                },
                {
                    "name": "selector",
                    "description": "A selector which should match the one originally passed to .on() when attaching event handlers."
                },
                {
                    "name": "handler",
                    "description": "A handler function previously attached for the event(s), or the special value false."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2370,
            "description": "Remove an event handler.",
            "params": [
                {
                    "name": "events",
                    "description": "One or more space-separated event types and optional namespaces, or just namespaces, such as \"click\", \"keydown.myPlugin\", or \".myPlugin\"."
                },
                {
                    "name": "handler",
                    "description": "A handler function previously attached for the event(s), or the special value false."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2377,
            "description": "Remove an event handler.",
            "params": [
                {
                    "name": "events",
                    "description": "An object where the string keys represent one or more space-separated event types and optional namespaces, and the values represent handler functions previously attached for the event(s)."
                },
                {
                    "name": "selector",
                    "description": "A selector which should match the one originally passed to .on() when attaching event handlers."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2385,
            "description": "Attach an event handler function for one or more events to the selected elements.",
            "params": [
                {
                    "name": "events",
                    "description": "One or more space-separated event types and optional namespaces, such as \"click\" or \"keydown.myPlugin\"."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered. The value false is also allowed as a shorthand for a function that simply does return false. Rest parameter args is for optional parameters passed to jQuery.trigger(). Note that the actual parameters on the event handler function must be marked as optional (? syntax)."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2392,
            "description": "Attach an event handler function for one or more events to the selected elements.",
            "params": [
                {
                    "name": "events",
                    "description": "One or more space-separated event types and optional namespaces, such as \"click\" or \"keydown.myPlugin\"."
                },
                {
                    "name": "selector",
                    "description": "A selector string to filter the descendants of the selected elements that trigger the event. If the selector is null or omitted, the event is always triggered when it reaches the selected element."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered. The value false is also allowed as a shorthand for a function that simply does return false."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2400,
            "description": "Attach an event handler function for one or more events to the selected elements.",
            "params": [
                {
                    "name": "events",
                    "description": "One or more space-separated event types and optional namespaces, such as \"click\" or \"keydown.myPlugin\"."
                },
                {
                    "name": "selector",
                    "description": "A selector string to filter the descendants of the selected elements that trigger the event. If the selector is null or omitted, the event is always triggered when it reaches the selected element."
                },
                {
                    "name": "data",
                    "description": "Data to be passed to the handler in event.data when an event is triggered."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered. The value false is also allowed as a shorthand for a function that simply does return false."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2409,
            "description": "Attach an event handler function for one or more events to the selected elements.",
            "params": [
                {
                    "name": "events",
                    "description": "An object in which the string keys represent one or more space-separated event types and optional namespaces, and the values represent a handler function to be called for the event(s)."
                },
                {
                    "name": "selector",
                    "description": "A selector string to filter the descendants of the selected elements that will call the handler. If the selector is null or omitted, the handler is always called when it reaches the selected element."
                },
                {
                    "name": "data",
                    "description": "Data to be passed to the handler in event.data when an event occurs."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2418,
            "description": "Attach a handler to an event for the elements. The handler is executed at most once per element per event type.",
            "params": [
                {
                    "name": "events",
                    "description": "A string containing one or more JavaScript event types, such as \"click\" or \"submit,\" or custom event names."
                },
                {
                    "name": "handler",
                    "description": "A function to execute at the time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2425,
            "description": "Attach a handler to an event for the elements. The handler is executed at most once per element per event type.",
            "params": [
                {
                    "name": "events",
                    "description": "A string containing one or more JavaScript event types, such as \"click\" or \"submit,\" or custom event names."
                },
                {
                    "name": "data",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute at the time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2434,
            "description": "Attach a handler to an event for the elements. The handler is executed at most once per element per event type.",
            "params": [
                {
                    "name": "events",
                    "description": "One or more space-separated event types and optional namespaces, such as \"click\" or \"keydown.myPlugin\"."
                },
                {
                    "name": "selector",
                    "description": "A selector string to filter the descendants of the selected elements that trigger the event. If the selector is null or omitted, the event is always triggered when it reaches the selected element."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered. The value false is also allowed as a shorthand for a function that simply does return false."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2442,
            "description": "Attach a handler to an event for the elements. The handler is executed at most once per element per event type.",
            "params": [
                {
                    "name": "events",
                    "description": "One or more space-separated event types and optional namespaces, such as \"click\" or \"keydown.myPlugin\"."
                },
                {
                    "name": "selector",
                    "description": "A selector string to filter the descendants of the selected elements that trigger the event. If the selector is null or omitted, the event is always triggered when it reaches the selected element."
                },
                {
                    "name": "data",
                    "description": "Data to be passed to the handler in event.data when an event is triggered."
                },
                {
                    "name": "handler",
                    "description": "A function to execute when the event is triggered. The value false is also allowed as a shorthand for a function that simply does return false."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2452,
            "description": "Attach a handler to an event for the elements. The handler is executed at most once per element per event type.",
            "params": [
                {
                    "name": "events",
                    "description": "An object in which the string keys represent one or more space-separated event types and optional namespaces, and the values represent a handler function to be called for the event(s)."
                },
                {
                    "name": "selector",
                    "description": "A selector string to filter the descendants of the selected elements that will call the handler. If the selector is null or omitted, the handler is always called when it reaches the selected element."
                },
                {
                    "name": "data",
                    "description": "Data to be passed to the handler in event.data when an event occurs."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2462,
            "description": "Specify a function to execute when the DOM is fully loaded.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute after the DOM is ready."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2469,
            "description": "Trigger the \"resize\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2473,
            "description": "Bind an event handler to the \"resize\" JavaScript event.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2479,
            "description": "Bind an event handler to the \"resize\" JavaScript event.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2487,
            "description": "Trigger the \"scroll\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2491,
            "description": "Bind an event handler to the \"scroll\" JavaScript event.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2497,
            "description": "Bind an event handler to the \"scroll\" JavaScript event.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2505,
            "description": "Trigger the \"select\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2509,
            "description": "Bind an event handler to the \"select\" JavaScript event.",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2515,
            "description": "Bind an event handler to the \"select\" JavaScript event.",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2523,
            "description": "Trigger the \"submit\" event on an element.",
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2527,
            "description": "Bind an event handler to the \"submit\" JavaScript event",
            "params": [
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2533,
            "description": "Bind an event handler to the \"submit\" JavaScript event",
            "params": [
                {
                    "name": "eventData",
                    "description": "An object containing data that will be passed to the event handler."
                },
                {
                    "name": "handler",
                    "description": "A function to execute each time the event is triggered."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/d.ts/jquery/jquery.d.ts",
            "line": 2616,
            "description": "Iterate over a jQuery object, executing a function for each matched element.",
            "params": [
                {
                    "name": "func",
                    "description": "A function to execute for each matched element."
                }
            ],
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 131,
            "description": "現在表示しているパネル番号",
            "itemtype": "property",
            "name": "index",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "default": "0",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 142,
            "description": "内部的に制御する遷移先を管理するパネル番号",
            "itemtype": "property",
            "name": "progressIndex",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 152,
            "description": "設定されているトランジションオブジェクト",
            "itemtype": "property",
            "name": "transition",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "PsycleTransition",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 162,
            "description": "スライドショーステージ要素",
            "itemtype": "property",
            "name": "stage",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "PsycleStage",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 172,
            "description": "スライドショーコンテナ要素",
            "itemtype": "property",
            "name": "container",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "PsycleContainer",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 182,
            "description": "スライドショーパネル要素リスト",
            "itemtype": "property",
            "name": "panels",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "PsyclePanelList",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 192,
            "description": "自動再生タイマー",
            "itemtype": "property",
            "name": "timer",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 202,
            "description": "ステージの幅",
            "itemtype": "property",
            "name": "stageWidth",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 212,
            "description": "パネル個々の幅",
            "itemtype": "property",
            "name": "panelWidth",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 222,
            "description": "パネルの数",
            "itemtype": "property",
            "name": "length",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 232,
            "description": "遷移前のパネル番号",
            "itemtype": "property",
            "name": "from",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 242,
            "description": "遷移後のパネル番号",
            "itemtype": "property",
            "name": "to",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 252,
            "description": "前に遷移するか次に遷移するか 番号の変化量",
            "itemtype": "property",
            "name": "vector",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "default": "0",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 263,
            "description": "現在遷移状態かどうか",
            "itemtype": "property",
            "name": "isTransition",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "boolean",
            "default": "false",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 274,
            "description": "遷移アニメーションを制御する`jQueryAnimation`インスタンス",
            "itemtype": "property",
            "name": "animation",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "jQueryAnimation",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 284,
            "description": "リピート方法",
            "itemtype": "property",
            "name": "repeat",
            "since": "0.3.0",
            "access": "public",
            "tagname": "",
            "type": "PsycleRepeat",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 294,
            "description": "自動再生の一時停止状態かどうか",
            "itemtype": "property",
            "name": "isPaused",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "boolean",
            "default": "false",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 305,
            "description": "オプション",
            "itemtype": "property",
            "name": "_config",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "type": "IPsycleConfig",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 315,
            "description": "今回処理する遷移の継続時間",
            "itemtype": "property",
            "name": "_duration",
            "since": "0.3.4",
            "access": "private",
            "tagname": "",
            "type": "number",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 325,
            "description": "遅延処理時の内部タイマー(setTimeoutの管理ID)",
            "itemtype": "property",
            "name": "_delayTimer",
            "since": "0.4.3",
            "access": "private",
            "tagname": "",
            "type": "number",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 335,
            "description": "自動再生を開始する",
            "itemtype": "method",
            "name": "play",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "自身のインスタンス",
                "type": "Psycle"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 354,
            "description": "自動再生を停止する",
            "itemtype": "method",
            "name": "stop",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "自身のインスタンス",
                "type": "Psycle"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 368,
            "description": "遷移を強制的に停止する\n遷移中のスタイルで固定される",
            "itemtype": "method",
            "name": "freeze",
            "since": "0.3.4",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "自身のインスタンス",
                "type": "Psycle"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 384,
            "description": "指定の番号のパネルへ遷移する",
            "itemtype": "method",
            "name": "gotoPanel",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "to",
                    "description": "遷移させるパネル番号",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "任意のアニメーション時間 省略すると自動再生時と同じ時間になる",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "自身のインスタンス",
                "type": "Psycle"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 409,
            "description": "【廃止予定】パネル番号を設定する",
            "itemtype": "method",
            "name": "setIndex",
            "deprecated": true,
            "since": "0.3.4",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "設定するインデックス番号",
                    "type": "Number"
                },
                {
                    "name": "overwriteCurrentIndex",
                    "description": "管理インデックス番号を上書きするかどうか",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "force",
                    "description": "強制的に行うかどうか",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "変化があったかどうか",
                "type": "Boolean"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 437,
            "description": "前のパネルへ遷移する",
            "itemtype": "method",
            "name": "prev",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "duration",
                    "description": "任意のアニメーション時間 省略すると自動再生時と同じ時間になる",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "自身のインスタンス",
                "type": "Psycle"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 454,
            "description": "次のパネルへ遷移する",
            "itemtype": "method",
            "name": "next",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "duration",
                    "description": "任意のアニメーション時間 省略すると自動再生時と同じ時間になる",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "自身のインスタンス",
                "type": "Psycle"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 471,
            "description": "リフロー処理を実行する",
            "itemtype": "method",
            "name": "reflow",
            "since": "0.3.4",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "data",
                    "description": "リフロー処理時に渡す任意のデータ",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "自身のインスタンス",
                "type": "Psycle"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 488,
            "description": "現在のパネルが最初のパネルかどうか",
            "itemtype": "method",
            "name": "isFirst",
            "since": "0.4.0",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "最初のパネルなら`true`",
                "type": "Boolean"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 500,
            "description": "現在のパネルが最後のパネルかどうか",
            "itemtype": "method",
            "name": "isLast",
            "since": "0.4.0",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "最後のパネルなら`true`",
                "type": "Boolean"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 512,
            "description": "マーカーを生成する",
            "itemtype": "method",
            "name": "marker",
            "since": "0.3.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "duration",
                    "description": "任意のアニメーション時間 省略すると自動再生時と同じ時間になる",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "生成したjQuery要素",
                "type": "JQuery"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 543,
            "description": "コントローラをバインドする",
            "itemtype": "method",
            "name": "controller",
            "since": "0.4.3",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "$elem",
                    "description": "バインドさせるjQuery要素",
                    "type": "JQuery"
                },
                {
                    "name": "options",
                    "description": "オプション",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "生成したjQuery要素",
                "type": "JQuery"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 570,
            "description": "指定の番号のパネルへ遷移する",
            "itemtype": "method",
            "name": "_transitionTo",
            "since": "0.4.2",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "to",
                    "description": "遷移させるパネル番号",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "任意のアニメーション時間 省略すると自動再生時と同じ時間になる",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "direction",
                    "description": "方向",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "自身のインスタンス",
                "type": "Psycle"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 603,
            "description": "番号の変化量の正規化\n一番近いパネルまでの距離(パネル数)を算出する",
            "itemtype": "method",
            "name": "_optimizeVector",
            "since": "0.3.0",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "to",
                    "description": "目的のパネル番号",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "正規化された変化量",
                "type": "Number"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 629,
            "description": "パネル番号の正規化",
            "itemtype": "method",
            "name": "_optimizeCounter",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "正規化するパネル番号",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "正規化されたパネル番号",
                "type": "Number"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 656,
            "description": "指定したパネル番号が最初のパネルかどうか",
            "itemtype": "method",
            "name": "_isFirst",
            "since": "0.3.0",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "評価するパネル番号",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "最初のパネルなら`true`",
                "type": "Boolean"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 669,
            "description": "指定したパネル番号が最後のパネルかどうか",
            "itemtype": "method",
            "name": "_isLast",
            "since": "0.3.0",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "評価するパネル番号",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "最後のパネルなら`true`",
                "type": "Boolean"
            },
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 682,
            "description": "リサイズイベントを関連付ける",
            "itemtype": "method",
            "name": "_resizeable",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 707,
            "description": "現在の状態の情報を返す",
            "itemtype": "method",
            "name": "_getState",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 731,
            "description": "初期化処理を実行する",
            "itemtype": "method",
            "name": "_init",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 744,
            "description": "非遷移番号移動を実行する",
            "itemtype": "method",
            "name": "_silent",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 757,
            "description": "遷移直前の処理を実行する",
            "itemtype": "method",
            "name": "_before",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 770,
            "description": "遷移時の処理を実行する",
            "itemtype": "method",
            "name": "_fire",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 781,
            "description": "遷移キャンセル時の処理を実行する",
            "itemtype": "method",
            "name": "_cancel",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 792,
            "description": "遷移完了時コールバック関数",
            "itemtype": "method",
            "name": "_done",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 811,
            "description": "遷移後の処理を実行する",
            "itemtype": "method",
            "name": "_after",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 822,
            "description": "遷移未完了で停止した場合のコールバック関数",
            "itemtype": "method",
            "name": "_fail",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 836,
            "description": "リサイズ中の処理を実行する",
            "itemtype": "method",
            "name": "_resize",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 847,
            "description": "リサイズ開始時の処理を実行する",
            "itemtype": "method",
            "name": "_resizeStart",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/Psycle.ts",
            "line": 861,
            "description": "リサイズ終了時の処理を実行する",
            "itemtype": "method",
            "name": "_resizeEnd",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "class": "Psycle"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanel.ts",
            "line": 22,
            "description": "自身のパネル番号",
            "itemtype": "property",
            "name": "index",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "class": "PsyclePanel"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanel.ts",
            "line": 32,
            "description": "スライドショーパネル要素リスト",
            "itemtype": "property",
            "name": "panels",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "PsyclePanelList",
            "class": "PsyclePanel"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanel.ts",
            "line": 42,
            "description": "要素を表示する",
            "itemtype": "method",
            "name": "show",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "自身",
                "type": "PsyclePanel"
            },
            "class": "PsyclePanel"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanel.ts",
            "line": 55,
            "description": "要素を隠す",
            "itemtype": "method",
            "name": "hide",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "自身",
                "type": "PsyclePanel"
            },
            "class": "PsyclePanel"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanel.ts",
            "line": 68,
            "description": "クローン要素(クラスは異なる)を作る",
            "itemtype": "method",
            "name": "clone",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "自身のクローン要素",
                "type": "PsyclePanelClone"
            },
            "class": "PsyclePanel"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 25,
            "description": "パネル要素のリスト",
            "itemtype": "property",
            "name": "_panels",
            "since": "0.3.0",
            "access": "private",
            "tagname": "",
            "type": "PsyclePanel[]",
            "default": "[]",
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 36,
            "description": "パネルのjQuery要素コレクション",
            "itemtype": "property",
            "name": "_$panels",
            "since": "0.3.1",
            "access": "private",
            "tagname": "",
            "type": "JQuery",
            "default": "$()",
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 47,
            "description": "クローン要素のリスト",
            "itemtype": "property",
            "name": "_clones",
            "since": "0.3.0",
            "access": "private",
            "tagname": "",
            "type": "PsyclePanelClone[]",
            "default": "[]",
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 58,
            "description": "パネル要素の数",
            "itemtype": "property",
            "name": "length",
            "since": "0.3.0",
            "access": "public",
            "tagname": "",
            "type": "PsyclePanel[]",
            "default": "0",
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 69,
            "description": "現在のパネルを設定する",
            "itemtype": "method",
            "name": "setCurrent",
            "since": "0.3.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "現在のパネル番号",
                    "type": "Number"
                },
                {
                    "name": "className",
                    "description": "現在のパネルに設定するクラス名",
                    "type": "String"
                }
            ],
            "return": {
                "description": "自身",
                "type": "PsyclePanelList"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 85,
            "description": "現在のパネルの設定をリセットする",
            "itemtype": "method",
            "name": "resetCurrent",
            "since": "0.3.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "className",
                    "description": "設定を外すクラス名",
                    "type": "String"
                }
            ],
            "return": {
                "description": "自身",
                "type": "PsyclePanelList"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 99,
            "description": "パネルを追加する",
            "itemtype": "method",
            "name": "add",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "$el",
                    "description": "追加する要素",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "自身",
                "type": "PsyclePanelList"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 117,
            "description": "クローンを追加する",
            "itemtype": "method",
            "name": "addClone",
            "since": "0.3.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "$el",
                    "description": "追加する要素",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "自身",
                "type": "PsyclePanelList"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 131,
            "description": "パネルを削除する",
            "itemtype": "method",
            "name": "remove",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "削除するパネルの番号",
                    "type": "Number"
                },
                {
                    "name": "removeFromDOMTree",
                    "description": "DOMツリーから削除するかどうか",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "自身",
                "type": "PsyclePanelList"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 151,
            "description": "指定の番号のパネルを返す",
            "itemtype": "method",
            "name": "item",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "searchIndex",
                    "description": "パネルの番号",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "パネル",
                "type": "PsyclePanel"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 165,
            "description": "パネルごとに処理を行う",
            "itemtype": "method",
            "name": "item",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "コールバック関数",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "自身",
                "type": "PsyclePanelList"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 185,
            "description": "要素を表示する",
            "itemtype": "method",
            "name": "show",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "自身",
                "type": "PsyclePanel"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 198,
            "description": "要素を隠す",
            "itemtype": "method",
            "name": "hide",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "自身",
                "type": "PsyclePanel"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 211,
            "description": "クローンのみを削除する",
            "itemtype": "method",
            "name": "removeClone",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "deprecated": true,
            "return": {
                "description": "自身",
                "type": "PsyclePanelList"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 230,
            "description": "検索番号の正規化",
            "itemtype": "method",
            "name": "_getRealIndex",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "searchIndex",
                    "description": "検索番号",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "結果の番号",
                "type": "Number"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsyclePanelList.ts",
            "line": 246,
            "description": "パネル番号を整理して正しいものに調整する",
            "itemtype": "method",
            "name": "_getRealIndex",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "パネルの数",
                "type": "Number"
            },
            "class": "PsyclePanelList"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 26,
            "description": "トランジション名",
            "itemtype": "property",
            "name": "name",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "string",
            "class": "PsycleTransition"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 36,
            "description": "初期処理",
            "itemtype": "method",
            "name": "init",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "class": "PsycleTransition"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 45,
            "description": "リフロー処理",
            "itemtype": "method",
            "name": "reflow",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "class": "PsycleTransition"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 54,
            "description": "非遷移変化処理",
            "itemtype": "method",
            "name": "silent",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "class": "PsycleTransition"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 63,
            "description": "遷移前処理",
            "itemtype": "method",
            "name": "before",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "class": "PsycleTransition"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 72,
            "description": "遷移時処理",
            "itemtype": "method",
            "name": "fire",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "class": "PsycleTransition"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 81,
            "description": "キャンセル処理",
            "itemtype": "method",
            "name": "cancel",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "class": "PsycleTransition"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 90,
            "description": "遷移後処理",
            "itemtype": "method",
            "name": "after",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "class": "PsycleTransition"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 99,
            "description": "プロセスリスト",
            "itemtype": "property",
            "name": "transitions",
            "since": "0.1.0",
            "static": 1,
            "default": "= {}",
            "class": "PsycleTransition"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransition.ts",
            "line": 109,
            "description": "遷移プロセス生成・登録",
            "itemtype": "method",
            "name": "create",
            "since": "0.1.0",
            "static": 1,
            "params": [
                {
                    "name": "processList",
                    "description": "プロセスリスト",
                    "type": "Object"
                }
            ],
            "class": "PsycleTransition"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransitionSlide.ts",
            "line": 106,
            "description": "swipeイベントが発火していた場合は処理をしない。\nイベントは dragstart → drag → swipe → dragend の順番に発火する",
            "class": "PsyborgElement"
        },
        {
            "file": "src/psyborg/Psycle/PsycleTransitionSlide.ts",
            "line": 156,
            "description": "直接幅を設定してしまうとインラインCSSで設定されるので\n次回取得時にその幅しか取得できない。\n固定の場合は問題ないが相対値の場合は問題となるので\n初期化時のインラインスタイルに戻すことで\n常にオリジナルの幅を取得できるようになる。",
            "class": "PsyborgElement"
        },
        {
            "file": "src/psyborg/PsyborgElement.ts",
            "line": 22,
            "description": "内包するjQuery要素",
            "itemtype": "property",
            "name": "$el",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "jQuery",
            "class": "PsyborgElement"
        },
        {
            "file": "src/psyborg/PsyborgElement.ts",
            "line": 32,
            "description": "イベントを任意に発火させる 要素にバインドされているイベントも同時に発火する",
            "itemtype": "method",
            "name": "trigger",
            "since": "0.3.0",
            "access": "public",
            "tagname": "",
            "override": "",
            "params": [
                {
                    "name": "type",
                    "description": "イベントの種類",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "発火と同時にリスナー関数に渡すハッシュデータ",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "{}"
                },
                {
                    "name": "context",
                    "description": "リスナー関数の`this`コンテクスト",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "デフォルトのイベントの抑制がされていないかどうか",
                "type": "Boolean"
            },
            "class": "PsyborgElement"
        },
        {
            "file": "src/psyborg/PsyborgElement.ts",
            "line": 52,
            "description": "要素の幅を取得",
            "itemtype": "method",
            "name": "getWidth",
            "since": "0.4.3",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "要素の幅",
                "type": "Number"
            },
            "class": "PsyborgElement"
        },
        {
            "file": "src/psyborg/PsyborgElement.ts",
            "line": 64,
            "description": "要素の高さを取得",
            "itemtype": "method",
            "name": "getHeight",
            "since": "0.4.3",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "要素の高さ",
                "type": "Number"
            },
            "class": "PsyborgElement"
        },
        {
            "file": "src/psyborg/PsyborgElement.ts",
            "line": 76,
            "description": "要素の幅を設定",
            "itemtype": "method",
            "name": "setWidth",
            "since": "0.4.3",
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "params": [
                {
                    "name": "value",
                    "description": "指定の値",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "自身",
                "type": "PsyborgElement"
            },
            "class": "PsyborgElement"
        },
        {
            "file": "src/psyborg/PsyborgElement.ts",
            "line": 91,
            "description": "要素の高さを設定",
            "itemtype": "method",
            "name": "setHeight",
            "since": "0.4.3",
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "params": [
                {
                    "name": "value",
                    "description": "指定の値",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "自身",
                "type": "PsyborgElement"
            },
            "class": "PsyborgElement"
        },
        {
            "file": "src/psyborg/PsyborgEvent.ts",
            "line": 18,
            "description": "イベントの種類",
            "itemtype": "property",
            "name": "type",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "string",
            "class": "PsyborgEvent"
        },
        {
            "file": "src/psyborg/PsyborgEvent.ts",
            "line": 28,
            "description": "イベントに渡されるハッシュデータ",
            "itemtype": "property",
            "name": "data",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "any",
            "class": "PsyborgEvent"
        },
        {
            "file": "src/psyborg/PsyborgEvent.ts",
            "line": 38,
            "description": "イベントが発生した時のタイムスタンプ",
            "itemtype": "property",
            "name": "timeStamp",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "number",
            "class": "PsyborgEvent"
        },
        {
            "file": "src/psyborg/PsyborgEvent.ts",
            "line": 48,
            "description": "デフォルトのイベントの発火を抑制するフラグ",
            "itemtype": "property",
            "name": "defaultPrevented",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "type": "boolean",
            "default": "false",
            "class": "PsyborgEvent"
        },
        {
            "file": "src/psyborg/PsyborgEvent.ts",
            "line": 59,
            "description": "デフォルトのイベントの発火を抑制する",
            "itemtype": "method",
            "name": "preventDefault",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "class": "PsyborgEvent"
        },
        {
            "file": "src/psyborg/PsyborgEventDispacther.ts",
            "line": 15,
            "description": "イベントの種類",
            "itemtype": "property",
            "name": "_listeners",
            "since": "0.1.0",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "class": "PsyborgEventDispacther"
        },
        {
            "file": "src/psyborg/PsyborgEventDispacther.ts",
            "line": 25,
            "description": "イベントを登録する",
            "itemtype": "method",
            "name": "on",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "types",
                    "description": "イベントの種類(スペース区切りで複数可)",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "リスナー関数",
                    "type": "Function"
                }
            ],
            "class": "PsyborgEventDispacther"
        },
        {
            "file": "src/psyborg/PsyborgEventDispacther.ts",
            "line": 46,
            "description": "イベントを削除する",
            "itemtype": "method",
            "name": "off",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "types",
                    "description": "イベントの種類(スペース区切りで複数可)",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "リスナー関数",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "PsyborgEventDispacther"
        },
        {
            "file": "src/psyborg/PsyborgEventDispacther.ts",
            "line": 68,
            "description": "イベントを任意に発火させる",
            "itemtype": "method",
            "name": "trigger",
            "since": "0.1.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "イベントの種類",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "発火と同時にリスナー関数に渡すハッシュデータ",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "{}"
                },
                {
                    "name": "context",
                    "description": "リスナー関数の`this`コンテクスト",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "デフォルトのイベントの抑制がされていないかどうか",
                "type": "Boolean"
            },
            "class": "PsyborgEventDispacther"
        },
        {
            "file": "src/psyborg/StyleSheet.ts",
            "line": 12,
            "description": "ポジションを絶対位置にする",
            "itemtype": "method",
            "name": "posAbs",
            "since": "0.1.0",
            "static": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "対象要素",
                    "type": "JQuery"
                },
                {
                    "name": "top",
                    "description": "垂直位置(単位:ピクセル)",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "left",
                    "description": "水平位置(単位:ピクセル)",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "対象要素",
                "type": "JQuery"
            },
            "class": "StyleSheet",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/StyleSheet.ts",
            "line": 31,
            "description": "ポジションが 未指定もしくは`static`の場合は`relative`にする",
            "itemtype": "method",
            "name": "posBase",
            "since": "0.1.0",
            "static": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "対象要素",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "対象要素",
                "type": "JQuery"
            },
            "class": "StyleSheet",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/StyleSheet.ts",
            "line": 50,
            "description": "`z-index`を指定する",
            "itemtype": "method",
            "name": "z",
            "since": "0.3.1",
            "static": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "対象要素",
                    "type": "JQuery"
                },
                {
                    "name": "zIndex",
                    "description": "対象要素",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "対象要素",
                "type": "JQuery"
            },
            "class": "StyleSheet",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/StyleSheet.ts",
            "line": 65,
            "description": "`overflow:hidden`かどうか",
            "itemtype": "method",
            "name": "isOverflowHidden",
            "since": "0.1.0",
            "static": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "対象要素",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "`overflow:hidden`だった場合は`true`、それ以外は`false`",
                "type": "Boolean"
            },
            "class": "StyleSheet",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/StyleSheet.ts",
            "line": 78,
            "description": "CSSを保存する",
            "itemtype": "method",
            "name": "saveCSS",
            "since": "0.3.4",
            "static": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "対象要素",
                    "type": "JQuery"
                }
            ],
            "class": "StyleSheet",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/StyleSheet.ts",
            "line": 93,
            "description": "保存したCSSを元に戻す",
            "itemtype": "method",
            "name": "restoreCSS",
            "since": "0.3.4",
            "static": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "対象要素",
                    "type": "JQuery"
                }
            ],
            "class": "StyleSheet",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/Util.ts",
            "line": 11,
            "description": "距離(px)と継続時間(ms)から速度(px/ms)を得る",
            "itemtype": "method",
            "name": "getSpeed",
            "since": "0.3.4",
            "static": 1,
            "params": [
                {
                    "name": "distance",
                    "description": "距離(px)",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "継続時間(ms)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "速度(px/ms)",
                "type": "Number"
            },
            "class": "Util",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/Util.ts",
            "line": 25,
            "description": "距離(px)と速度(px/ms)から継続時間(ms)を得る",
            "itemtype": "method",
            "name": "getDuration",
            "since": "0.3.4",
            "static": 1,
            "params": [
                {
                    "name": "distance",
                    "description": "距離(px)",
                    "type": "Number"
                },
                {
                    "name": "speed",
                    "description": "速度(px/ms)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "継続時間(ms)",
                "type": "Number"
            },
            "class": "Util",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/Util.ts",
            "line": 39,
            "description": "継続時間(ms)と速度(px/ms)から距離(px)を得る",
            "itemtype": "method",
            "name": "getDistance",
            "since": "0.3.4",
            "static": 1,
            "params": [
                {
                    "name": "duration",
                    "description": "継続時間(ms)",
                    "type": "Number"
                },
                {
                    "name": "speed",
                    "description": "速度(px/ms)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "距離(px)",
                "type": "Number"
            },
            "class": "Util",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/Util.ts",
            "line": 53,
            "test": "test/util.html",
            "class": "Util",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/Util.ts",
            "line": 69,
            "params": [
                {
                    "name": "direction",
                    "description": "0 or 1 or -1 0は一番近い数字を算出する",
                    "type": "Number"
                }
            ],
            "test": "test/util2.getloopSeriesVector.js",
            "class": "Util",
            "module": "psyborg"
        },
        {
            "file": "src/psyborg/Window.ts",
            "line": 11,
            "description": "ポジションを絶対位置にする",
            "itemtype": "method",
            "name": "linkTo",
            "since": "0.4.3",
            "static": 1,
            "params": [
                {
                    "name": "href",
                    "description": "リンク先URLおよびパス",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "ターゲットフレーム",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "class": "Window",
            "module": "psyborg"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: override",
            "line": " src/psyborg/PsyborgElement.ts:32"
        },
        {
            "message": "unknown tag: test",
            "line": " src/psyborg/Util.ts:53"
        },
        {
            "message": "unknown tag: test",
            "line": " src/psyborg/Util.ts:69"
        },
        {
            "message": "Missing item type\nInterface for the AJAX setting that will configure the AJAX request",
            "line": " src/d.ts/jquery/jquery.d.ts:21"
        },
        {
            "message": "Missing item type\nThe content type sent in the request header that tells the server what kind of response it will accept in return. If the accepts setting needs modification, it is recommended to do so once in the $.ajaxSetup() method.",
            "line": " src/d.ts/jquery/jquery.d.ts:25"
        },
        {
            "message": "Missing item type\nBy default, all requests are sent asynchronously (i.e. this is set to true by default). If you need synchronous requests, set this option to false. Cross-domain requests and dataType: \"jsonp\" requests do not support synchronous operation. Note that synchronous requests may temporarily lock the browser, disabling any actions while the request is active. As of jQuery 1.8, the use of async: false with jqXHR ($.Deferred) is deprecated; you must use the success/error/complete callback options instead of the corresponding methods of the jqXHR object such as jqXHR.done() or the deprecated jqXHR.success().",
            "line": " src/d.ts/jquery/jquery.d.ts:29"
        },
        {
            "message": "Missing item type\nA pre-request callback function that can be used to modify the jqXHR (in jQuery 1.4.x, XMLHTTPRequest) object before it is sent. Use this to set custom headers, etc. The jqXHR and settings objects are passed as arguments. This is an Ajax Event. Returning false in the beforeSend function will cancel the request. As of jQuery 1.5, the beforeSend option will be called regardless of the type of request.",
            "line": " src/d.ts/jquery/jquery.d.ts:33"
        },
        {
            "message": "Missing item type\nIf set to false, it will force requested pages not to be cached by the browser. Note: Setting cache to false will only work correctly with HEAD and GET requests. It works by appending \"_={timestamp}\" to the GET parameters. The parameter is not needed for other types of requests, except in IE8 when a POST is made to a URL that has already been requested by a GET.",
            "line": " src/d.ts/jquery/jquery.d.ts:37"
        },
        {
            "message": "Missing item type\nA function to be called when the request finishes (after success and error callbacks are executed). The function gets passed two arguments: The jqXHR (in jQuery 1.4.x, XMLHTTPRequest) object and a string categorizing the status of the request (\"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", or \"parsererror\"). As of jQuery 1.5, the complete setting can accept an array of functions. Each function will be called in turn. This is an Ajax Event.",
            "line": " src/d.ts/jquery/jquery.d.ts:41"
        },
        {
            "message": "Missing item type\nAn object of string/regular-expression pairs that determine how jQuery will parse the response, given its content type. (version added: 1.5)",
            "line": " src/d.ts/jquery/jquery.d.ts:45"
        },
        {
            "message": "Missing item type\nWhen sending data to the server, use this content type. Default is \"application/x-www-form-urlencoded; charset=UTF-8\", which is fine for most cases. If you explicitly pass in a content-type to $.ajax(), then it is always sent to the server (even if no data is sent). The W3C XMLHttpRequest specification dictates that the charset is always UTF-8; specifying another charset will not force the browser to change the encoding.",
            "line": " src/d.ts/jquery/jquery.d.ts:51"
        },
        {
            "message": "Missing item type\nThis object will be made the context of all Ajax-related callbacks. By default, the context is an object that represents the ajax settings used in the call ($.ajaxSettings merged with the settings passed to $.ajax).",
            "line": " src/d.ts/jquery/jquery.d.ts:55"
        },
        {
            "message": "Missing item type\nAn object containing dataType-to-dataType converters. Each converter's value is a function that returns the transformed value of the response. (version added: 1.5)",
            "line": " src/d.ts/jquery/jquery.d.ts:59"
        },
        {
            "message": "Missing item type\nIf you wish to force a crossDomain request (such as JSONP) on the same domain, set the value of crossDomain to true. This allows, for example, server-side redirection to another domain. (version added: 1.5)",
            "line": " src/d.ts/jquery/jquery.d.ts:63"
        },
        {
            "message": "Missing item type\nData to be sent to the server. It is converted to a query string, if not already a string. It's appended to the url for GET-requests. See processData option to prevent this automatic processing. Object must be Key/Value pairs. If value is an Array, jQuery serializes multiple values with same key based on the value of the traditional setting (described below).",
            "line": " src/d.ts/jquery/jquery.d.ts:67"
        },
        {
            "message": "Missing item type\nA function to be used to handle the raw response data of XMLHttpRequest.This is a pre-filtering function to sanitize the response. You should return the sanitized data. The function accepts two arguments: The raw data returned from the server and the 'dataType' parameter.",
            "line": " src/d.ts/jquery/jquery.d.ts:71"
        },
        {
            "message": "Missing item type\nThe type of data that you're expecting back from the server. If none is specified, jQuery will try to infer it based on the MIME type of the response (an XML MIME type will yield XML, in 1.4 JSON will yield a JavaScript object, in 1.4 script will execute the script, and anything else will be returned as a string).",
            "line": " src/d.ts/jquery/jquery.d.ts:75"
        },
        {
            "message": "Missing item type\nA function to be called if the request fails. The function receives three arguments: The jqXHR (in jQuery 1.4.x, XMLHttpRequest) object, a string describing the type of error that occurred and an optional exception object, if one occurred. Possible values for the second argument (besides null) are \"timeout\", \"error\", \"abort\", and \"parsererror\". When an HTTP error occurs, errorThrown receives the textual portion of the HTTP status, such as \"Not Found\" or \"Internal Server Error.\" As of jQuery 1.5, the error setting can accept an array of functions. Each function will be called in turn. Note: This handler is not called for cross-domain script and cross-domain JSONP requests. This is an Ajax Event.",
            "line": " src/d.ts/jquery/jquery.d.ts:79"
        },
        {
            "message": "Missing item type\nWhether to trigger global Ajax event handlers for this request. The default is true. Set to false to prevent the global handlers like ajaxStart or ajaxStop from being triggered. This can be used to control various Ajax Events.",
            "line": " src/d.ts/jquery/jquery.d.ts:83"
        },
        {
            "message": "Missing item type\nAn object of additional header key/value pairs to send along with requests using the XMLHttpRequest transport. The header X-Requested-With: XMLHttpRequest is always added, but its default XMLHttpRequest value can be changed here. Values in the headers setting can also be overwritten from within the beforeSend function. (version added: 1.5)",
            "line": " src/d.ts/jquery/jquery.d.ts:87"
        },
        {
            "message": "Missing item type\nAllow the request to be successful only if the response has changed since the last request. This is done by checking the Last-Modified header. Default value is false, ignoring the header. In jQuery 1.4 this technique also checks the 'etag' specified by the server to catch unmodified data.",
            "line": " src/d.ts/jquery/jquery.d.ts:91"
        },
        {
            "message": "Missing item type\nAllow the current environment to be recognized as \"local,\" (e.g. the filesystem), even if jQuery does not recognize it as such by default. The following protocols are currently recognized as local: file, *-extension, and widget. If the isLocal setting needs modification, it is recommended to do so once in the $.ajaxSetup() method. (version added: 1.5.1)",
            "line": " src/d.ts/jquery/jquery.d.ts:95"
        },
        {
            "message": "Missing item type\nOverride the callback function name in a jsonp request. This value will be used instead of 'callback' in the 'callback=?' part of the query string in the url. So {jsonp:'onJSONPLoad'} would result in 'onJSONPLoad=?' passed to the server. As of jQuery 1.5, setting the jsonp option to false prevents jQuery from adding the \"?callback\" string to the URL or attempting to use \"=?\" for transformation. In this case, you should also explicitly set the jsonpCallback setting. For example, { jsonp: false, jsonpCallback: \"callbackName\" }",
            "line": " src/d.ts/jquery/jquery.d.ts:99"
        },
        {
            "message": "Missing item type\nSpecify the callback function name for a JSONP request. This value will be used instead of the random name automatically generated by jQuery. It is preferable to let jQuery generate a unique name as it'll make it easier to manage the requests and provide callbacks and error handling. You may want to specify the callback when you want to enable better browser caching of GET requests. As of jQuery 1.5, you can also use a function for this setting, in which case the value of jsonpCallback is set to the return value of that function.",
            "line": " src/d.ts/jquery/jquery.d.ts:103"
        },
        {
            "message": "Missing item type\nA mime type to override the XHR mime type. (version added: 1.5.1)",
            "line": " src/d.ts/jquery/jquery.d.ts:107"
        },
        {
            "message": "Missing item type\nA password to be used with XMLHttpRequest in response to an HTTP access authentication request.",
            "line": " src/d.ts/jquery/jquery.d.ts:111"
        },
        {
            "message": "Missing item type\nBy default, data passed in to the data option as an object (technically, anything other than a string) will be processed and transformed into a query string, fitting to the default content-type \"application/x-www-form-urlencoded\". If you want to send a DOMDocument, or other non-processed data, set this option to false.",
            "line": " src/d.ts/jquery/jquery.d.ts:115"
        },
        {
            "message": "Missing item type\nOnly applies when the \"script\" transport is used (e.g., cross-domain requests with \"jsonp\" or \"script\" dataType and \"GET\" type). Sets the charset attribute on the script tag used in the request. Used when the character set on the local page is not the same as the one on the remote script.",
            "line": " src/d.ts/jquery/jquery.d.ts:119"
        },
        {
            "message": "Missing item type\nAn object of numeric HTTP codes and functions to be called when the response has the corresponding code. f the request is successful, the status code functions take the same parameters as the success callback; if it results in an error (including 3xx redirect), they take the same parameters as the error callback. (version added: 1.5)",
            "line": " src/d.ts/jquery/jquery.d.ts:123"
        },
        {
            "message": "Missing item type\nA function to be called if the request succeeds. The function gets passed three arguments: The data returned from the server, formatted according to the dataType parameter; a string describing the status; and the jqXHR (in jQuery 1.4.x, XMLHttpRequest) object. As of jQuery 1.5, the success setting can accept an array of functions. Each function will be called in turn. This is an Ajax Event.",
            "line": " src/d.ts/jquery/jquery.d.ts:127"
        },
        {
            "message": "Missing item type\nSet a timeout (in milliseconds) for the request. This will override any global timeout set with $.ajaxSetup(). The timeout period starts at the point the $.ajax call is made; if several other requests are in progress and the browser has no connections available, it is possible for a request to time out before it can be sent. In jQuery 1.4.x and below, the XMLHttpRequest object will be in an invalid state if the request times out; accessing any object members may throw an exception. In Firefox 3.0+ only, script and JSONP requests cannot be cancelled by a timeout; the script will run even if it arrives after the timeout period.",
            "line": " src/d.ts/jquery/jquery.d.ts:131"
        },
        {
            "message": "Missing item type\nSet this to true if you wish to use the traditional style of param serialization.",
            "line": " src/d.ts/jquery/jquery.d.ts:135"
        },
        {
            "message": "Missing item type\nThe type of request to make (\"POST\" or \"GET\"), default is \"GET\". Note: Other HTTP request methods, such as PUT and DELETE, can also be used here, but they are not supported by all browsers.",
            "line": " src/d.ts/jquery/jquery.d.ts:139"
        },
        {
            "message": "Missing item type\nA string containing the URL to which the request is sent.",
            "line": " src/d.ts/jquery/jquery.d.ts:143"
        },
        {
            "message": "Missing item type\nA username to be used with XMLHttpRequest in response to an HTTP access authentication request.",
            "line": " src/d.ts/jquery/jquery.d.ts:147"
        },
        {
            "message": "Missing item type\nCallback for creating the XMLHttpRequest object. Defaults to the ActiveXObject when available (IE), the XMLHttpRequest otherwise. Override to provide your own implementation for XMLHttpRequest or enhancements to the factory.",
            "line": " src/d.ts/jquery/jquery.d.ts:151"
        },
        {
            "message": "Missing item type\nAn object of fieldName-fieldValue pairs to set on the native XHR object. For example, you can use it to set withCredentials to true for cross-domain requests if needed. In jQuery 1.5, the withCredentials property was not propagated to the native XHR and thus CORS requests requiring it would ignore this flag. For this reason, we recommend using jQuery 1.5.1+ should you require the use of it. (version added: 1.5.1)",
            "line": " src/d.ts/jquery/jquery.d.ts:155"
        },
        {
            "message": "Missing item type\nInterface for the jqXHR object",
            "line": " src/d.ts/jquery/jquery.d.ts:161"
        },
        {
            "message": "Missing item type\nThe .overrideMimeType() method may be used in the beforeSend() callback function, for example, to modify the response content-type header. As of jQuery 1.5.1, the jqXHR object also contains the overrideMimeType() method (it was available in jQuery 1.4.x, as well, but was temporarily removed in jQuery 1.5).",
            "line": " src/d.ts/jquery/jquery.d.ts:165"
        },
        {
            "message": "Missing item type\nInterface for the JQuery callback",
            "line": " src/d.ts/jquery/jquery.d.ts:172"
        },
        {
            "message": "Missing item type\nAdd a callback or a collection of callbacks to a callback list.",
            "line": " src/d.ts/jquery/jquery.d.ts:176"
        },
        {
            "message": "Missing item type\nAdd a callback or a collection of callbacks to a callback list.",
            "line": " src/d.ts/jquery/jquery.d.ts:182"
        },
        {
            "message": "Missing item type\nDisable a callback list from doing anything more.",
            "line": " src/d.ts/jquery/jquery.d.ts:189"
        },
        {
            "message": "Missing item type\nDetermine if the callbacks list has been disabled.",
            "line": " src/d.ts/jquery/jquery.d.ts:194"
        },
        {
            "message": "Missing item type\nRemove all of the callbacks from a list.",
            "line": " src/d.ts/jquery/jquery.d.ts:199"
        },
        {
            "message": "Missing item type\nCall all of the callbacks with the given arguments",
            "line": " src/d.ts/jquery/jquery.d.ts:204"
        },
        {
            "message": "Missing item type\nDetermine if the callbacks have already been called at least once.",
            "line": " src/d.ts/jquery/jquery.d.ts:211"
        },
        {
            "message": "Missing item type\nCall all callbacks in a list with the given context and arguments.",
            "line": " src/d.ts/jquery/jquery.d.ts:216"
        },
        {
            "message": "Missing item type\nDetermine whether a supplied callback is in a list",
            "line": " src/d.ts/jquery/jquery.d.ts:224"
        },
        {
            "message": "Missing item type\nLock a callback list in its current state.",
            "line": " src/d.ts/jquery/jquery.d.ts:231"
        },
        {
            "message": "Missing item type\nDetermine if the callbacks list has been locked.",
            "line": " src/d.ts/jquery/jquery.d.ts:236"
        },
        {
            "message": "Missing item type\nRemove a callback or a collection of callbacks from a callback list.",
            "line": " src/d.ts/jquery/jquery.d.ts:241"
        },
        {
            "message": "Missing item type\nRemove a callback or a collection of callbacks from a callback list.",
            "line": " src/d.ts/jquery/jquery.d.ts:247"
        },
        {
            "message": "Missing item type\nCreate a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.",
            "line": " src/d.ts/jquery/jquery.d.ts:406"
        },
        {
            "message": "Missing item type\nCreate a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.",
            "line": " src/d.ts/jquery/jquery.d.ts:413"
        },
        {
            "message": "Missing item type\nThe interface used to construct jQuery events (with $.Event). It is\ndefined separately instead of inline in JQueryStatic to allow\noverriding the construction function with specific strings\nreturning specific event objects.",
            "line": " src/d.ts/jquery/jquery.d.ts:422"
        },
        {
            "message": "Missing item type\nThe interface used to specify coordinates.",
            "line": " src/d.ts/jquery/jquery.d.ts:433"
        },
        {
            "message": "Missing item type\nA string or number determining how long the animation will run.",
            "line": " src/d.ts/jquery/jquery.d.ts:442"
        },
        {
            "message": "Missing item type\nA string indicating which easing function to use for the transition.",
            "line": " src/d.ts/jquery/jquery.d.ts:446"
        },
        {
            "message": "Missing item type\nA function to call once the animation is complete.",
            "line": " src/d.ts/jquery/jquery.d.ts:450"
        },
        {
            "message": "Missing item type\nA function to be called for each animated property of each animated element. This function provides an opportunity to modify the Tween object to change the value of the property before it is set.",
            "line": " src/d.ts/jquery/jquery.d.ts:454"
        },
        {
            "message": "Missing item type\nA function to be called after each step of the animation, only once per animated element regardless of the number of animated properties. (version added: 1.8)",
            "line": " src/d.ts/jquery/jquery.d.ts:458"
        },
        {
            "message": "Missing item type\nA function to call when the animation begins. (version added: 1.8)",
            "line": " src/d.ts/jquery/jquery.d.ts:462"
        },
        {
            "message": "Missing item type\nA function to be called when the animation completes (its Promise object is resolved). (version added: 1.8)",
            "line": " src/d.ts/jquery/jquery.d.ts:466"
        },
        {
            "message": "Missing item type\nA function to be called when the animation fails to complete (its Promise object is rejected). (version added: 1.8)",
            "line": " src/d.ts/jquery/jquery.d.ts:470"
        },
        {
            "message": "Missing item type\nA function to be called when the animation completes or stops without completing (its Promise object is either resolved or rejected). (version added: 1.8)",
            "line": " src/d.ts/jquery/jquery.d.ts:474"
        },
        {
            "message": "Missing item type\nA Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. As of jQuery 1.7, the queue option can also accept a string, in which case the animation is added to the queue represented by that string. When a custom queue name is used the animation does not automatically start; you must call .dequeue(\"queuename\") to start it.",
            "line": " src/d.ts/jquery/jquery.d.ts:478"
        },
        {
            "message": "Missing item type\nA map of one or more of the CSS properties defined by the properties argument and their corresponding easing functions. (version added: 1.4)",
            "line": " src/d.ts/jquery/jquery.d.ts:482"
        },
        {
            "message": "Missing item type\nThe interface used to specify easing functions.",
            "line": " src/d.ts/jquery/jquery.d.ts:488"
        },
        {
            "message": "Missing item type\nStatic members of jQuery (those on $ and jQuery themselves)",
            "line": " src/d.ts/jquery/jquery.d.ts:496"
        },
        {
            "message": "Missing item type\nPerform an asynchronous HTTP (Ajax) request.",
            "line": " src/d.ts/jquery/jquery.d.ts:501"
        },
        {
            "message": "Missing item type\nPerform an asynchronous HTTP (Ajax) request.",
            "line": " src/d.ts/jquery/jquery.d.ts:507"
        },
        {
            "message": "Missing item type\nHandle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax().",
            "line": " src/d.ts/jquery/jquery.d.ts:515"
        },
        {
            "message": "Missing item type\nHandle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax().",
            "line": " src/d.ts/jquery/jquery.d.ts:522"
        },
        {
            "message": "Missing item type\nSet default values for future Ajax requests. Its use is not recommended.",
            "line": " src/d.ts/jquery/jquery.d.ts:531"
        },
        {
            "message": "Missing item type\nLoad data from the server using a HTTP GET request.",
            "line": " src/d.ts/jquery/jquery.d.ts:538"
        },
        {
            "message": "Missing item type\nLoad data from the server using a HTTP GET request.",
            "line": " src/d.ts/jquery/jquery.d.ts:546"
        },
        {
            "message": "Missing item type\nLoad data from the server using a HTTP GET request.",
            "line": " src/d.ts/jquery/jquery.d.ts:555"
        },
        {
            "message": "Missing item type\nLoad JSON-encoded data from the server using a GET HTTP request.",
            "line": " src/d.ts/jquery/jquery.d.ts:564"
        },
        {
            "message": "Missing item type\nLoad JSON-encoded data from the server using a GET HTTP request.",
            "line": " src/d.ts/jquery/jquery.d.ts:571"
        },
        {
            "message": "Missing item type\nLoad JSON-encoded data from the server using a GET HTTP request.",
            "line": " src/d.ts/jquery/jquery.d.ts:579"
        },
        {
            "message": "Missing item type\nLoad a JavaScript file from the server using a GET HTTP request, then execute it.",
            "line": " src/d.ts/jquery/jquery.d.ts:587"
        },
        {
            "message": "Missing item type\nCreate a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.",
            "line": " src/d.ts/jquery/jquery.d.ts:595"
        },
        {
            "message": "Missing item type\nLoad data from the server using a HTTP POST request.",
            "line": " src/d.ts/jquery/jquery.d.ts:600"
        },
        {
            "message": "Missing item type\nLoad data from the server using a HTTP POST request.",
            "line": " src/d.ts/jquery/jquery.d.ts:608"
        },
        {
            "message": "Missing item type\nLoad data from the server using a HTTP POST request.",
            "line": " src/d.ts/jquery/jquery.d.ts:617"
        },
        {
            "message": "Missing item type\nA multi-purpose callbacks list object that provides a powerful way to manage callback lists.",
            "line": " src/d.ts/jquery/jquery.d.ts:627"
        },
        {
            "message": "Missing item type\nHolds or releases the execution of jQuery's ready event.",
            "line": " src/d.ts/jquery/jquery.d.ts:634"
        },
        {
            "message": "Missing item type\nAccepts a string containing a CSS selector which is then used to match a set of elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:641"
        },
        {
            "message": "Missing item type\nAccepts a string containing a CSS selector which is then used to match a set of elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:648"
        },
        {
            "message": "Missing item type\nAccepts a string containing a CSS selector which is then used to match a set of elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:655"
        },
        {
            "message": "Missing item type\nAccepts a string containing a CSS selector which is then used to match a set of elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:661"
        },
        {
            "message": "Missing item type\nAccepts a string containing a CSS selector which is then used to match a set of elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:667"
        },
        {
            "message": "Missing item type\nAccepts a string containing a CSS selector which is then used to match a set of elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:673"
        },
        {
            "message": "Missing item type\nSpecify a function to execute when the DOM is fully loaded.",
            "line": " src/d.ts/jquery/jquery.d.ts:679"
        },
        {
            "message": "Missing item type\nCreates DOM elements on the fly from the provided string of raw HTML.",
            "line": " src/d.ts/jquery/jquery.d.ts:684"
        },
        {
            "message": "Missing item type\nCreates DOM elements on the fly from the provided string of raw HTML.",
            "line": " src/d.ts/jquery/jquery.d.ts:691"
        },
        {
            "message": "Missing item type\nBinds a function to be executed when the DOM has finished loading.",
            "line": " src/d.ts/jquery/jquery.d.ts:699"
        },
        {
            "message": "Missing item type\nRelinquish jQuery's control of the $ variable.",
            "line": " src/d.ts/jquery/jquery.d.ts:706"
        },
        {
            "message": "Missing item type\nProvides a way to execute callback functions based on one or more objects, usually Deferred objects that represent asynchronous events.",
            "line": " src/d.ts/jquery/jquery.d.ts:713"
        },
        {
            "message": "Missing item type\nProvides a way to execute callback functions based on one or more objects, usually Deferred objects that represent asynchronous events.",
            "line": " src/d.ts/jquery/jquery.d.ts:719"
        },
        {
            "message": "Missing item type\nProvides a way to execute callback functions based on one or more objects, usually Deferred objects that represent asynchronous events.",
            "line": " src/d.ts/jquery/jquery.d.ts:725"
        },
        {
            "message": "Missing item type\nHook directly into jQuery to override how particular CSS properties are retrieved or set, normalize CSS property naming, or create custom properties.",
            "line": " src/d.ts/jquery/jquery.d.ts:732"
        },
        {
            "message": "Missing item type\nStore arbitrary data associated with the specified element. Returns the value that was set.",
            "line": " src/d.ts/jquery/jquery.d.ts:738"
        },
        {
            "message": "Missing item type\nReturns value at named data store for the element, as set by jQuery.data(element, name, value), or the full data store for the element.",
            "line": " src/d.ts/jquery/jquery.d.ts:746"
        },
        {
            "message": "Missing item type\nReturns value at named data store for the element, as set by jQuery.data(element, name, value), or the full data store for the element.",
            "line": " src/d.ts/jquery/jquery.d.ts:753"
        },
        {
            "message": "Missing item type\nExecute the next function on the queue for the matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:760"
        },
        {
            "message": "Missing item type\nDetermine whether an element has any jQuery data associated with it.",
            "line": " src/d.ts/jquery/jquery.d.ts:768"
        },
        {
            "message": "Missing item type\nShow the queue of functions to be executed on the matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:775"
        },
        {
            "message": "Missing item type\nManipulate the queue of functions to be executed on the matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:782"
        },
        {
            "message": "Missing item type\nManipulate the queue of functions to be executed on the matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:790"
        },
        {
            "message": "Missing item type\nRemove a previously-stored piece of data.",
            "line": " src/d.ts/jquery/jquery.d.ts:799"
        },
        {
            "message": "Missing item type\nA constructor function that returns a chainable utility object with methods to register multiple callbacks into callback queues, invoke callback queues, and relay the success or failure state of any synchronous or asynchronous function.",
            "line": " src/d.ts/jquery/jquery.d.ts:807"
        },
        {
            "message": "Missing item type\nEffects",
            "line": " src/d.ts/jquery/jquery.d.ts:814"
        },
        {
            "message": "Missing item type\nThe rate (in milliseconds) at which animations fire.",
            "line": " src/d.ts/jquery/jquery.d.ts:819"
        },
        {
            "message": "Missing item type\nGlobally disable all animations.",
            "line": " src/d.ts/jquery/jquery.d.ts:825"
        },
        {
            "message": "Missing item type\nTakes a function and returns a new one that will always have a particular context.",
            "line": " src/d.ts/jquery/jquery.d.ts:832"
        },
        {
            "message": "Missing item type\nTakes a function and returns a new one that will always have a particular context.",
            "line": " src/d.ts/jquery/jquery.d.ts:840"
        },
        {
            "message": "Missing item type\nTakes a string and throws an exception containing it.",
            "line": " src/d.ts/jquery/jquery.d.ts:851"
        },
        {
            "message": "Missing item type\nCheck to see if a DOM element is a descendant of another DOM element.",
            "line": " src/d.ts/jquery/jquery.d.ts:866"
        },
        {
            "message": "Missing item type\nA generic iterator function, which can be used to seamlessly iterate over both objects and arrays. Arrays and array-like objects with a length property (such as a function's arguments object) are iterated by numeric index, from 0 to length-1. Other objects are iterated via their named properties.",
            "line": " src/d.ts/jquery/jquery.d.ts:874"
        },
        {
            "message": "Missing item type\nA generic iterator function, which can be used to seamlessly iterate over both objects and arrays. Arrays and array-like objects with a length property (such as a function's arguments object) are iterated by numeric index, from 0 to length-1. Other objects are iterated via their named properties.",
            "line": " src/d.ts/jquery/jquery.d.ts:885"
        },
        {
            "message": "Missing item type\nMerge the contents of two or more objects together into the first object.",
            "line": " src/d.ts/jquery/jquery.d.ts:896"
        },
        {
            "message": "Missing item type\nMerge the contents of two or more objects together into the first object.",
            "line": " src/d.ts/jquery/jquery.d.ts:904"
        },
        {
            "message": "Missing item type\nExecute some JavaScript code globally.",
            "line": " src/d.ts/jquery/jquery.d.ts:914"
        },
        {
            "message": "Missing item type\nFinds the elements of an array which satisfy a filter function. The original array is not affected.",
            "line": " src/d.ts/jquery/jquery.d.ts:921"
        },
        {
            "message": "Missing item type\nSearch for a specified value within an array and return its index (or -1 if not found).",
            "line": " src/d.ts/jquery/jquery.d.ts:930"
        },
        {
            "message": "Missing item type\nDetermine whether the argument is an array.",
            "line": " src/d.ts/jquery/jquery.d.ts:939"
        },
        {
            "message": "Missing item type\nCheck to see if an object is empty (contains no enumerable properties).",
            "line": " src/d.ts/jquery/jquery.d.ts:945"
        },
        {
            "message": "Missing item type\nDetermine if the argument passed is a Javascript function object.",
            "line": " src/d.ts/jquery/jquery.d.ts:951"
        },
        {
            "message": "Missing item type\nDetermines whether its argument is a number.",
            "line": " src/d.ts/jquery/jquery.d.ts:957"
        },
        {
            "message": "Missing item type\nCheck to see if an object is a plain object (created using \"{}\" or \"new Object\").",
            "line": " src/d.ts/jquery/jquery.d.ts:963"
        },
        {
            "message": "Missing item type\nDetermine whether the argument is a window.",
            "line": " src/d.ts/jquery/jquery.d.ts:969"
        },
        {
            "message": "Missing item type\nCheck to see if a DOM node is within an XML document (or is an XML document).",
            "line": " src/d.ts/jquery/jquery.d.ts:975"
        },
        {
            "message": "Missing item type\nConvert an array-like object into a true JavaScript array.",
            "line": " src/d.ts/jquery/jquery.d.ts:982"
        },
        {
            "message": "Missing item type\nTranslate all items in an array or object to new array of items.",
            "line": " src/d.ts/jquery/jquery.d.ts:989"
        },
        {
            "message": "Missing item type\nTranslate all items in an array or object to new array of items.",
            "line": " src/d.ts/jquery/jquery.d.ts:996"
        },
        {
            "message": "Missing item type\nMerge the contents of two arrays together into the first array.",
            "line": " src/d.ts/jquery/jquery.d.ts:1004"
        },
        {
            "message": "Missing item type\nAn empty function.",
            "line": " src/d.ts/jquery/jquery.d.ts:1012"
        },
        {
            "message": "Missing item type\nReturn a number representing the current time.",
            "line": " src/d.ts/jquery/jquery.d.ts:1017"
        },
        {
            "message": "Missing item type\nTakes a well-formed JSON string and returns the resulting JavaScript object.",
            "line": " src/d.ts/jquery/jquery.d.ts:1022"
        },
        {
            "message": "Missing item type\nParses a string into an XML document.",
            "line": " src/d.ts/jquery/jquery.d.ts:1029"
        },
        {
            "message": "Missing item type\nRemove the whitespace from the beginning and end of a string.",
            "line": " src/d.ts/jquery/jquery.d.ts:1036"
        },
        {
            "message": "Missing item type\nDetermine the internal JavaScript [[Class]] of an object.",
            "line": " src/d.ts/jquery/jquery.d.ts:1043"
        },
        {
            "message": "Missing item type\nSorts an array of DOM elements, in place, with the duplicates removed. Note that this only works on arrays of DOM elements, not strings or numbers.",
            "line": " src/d.ts/jquery/jquery.d.ts:1050"
        },
        {
            "message": "Missing item type\nParses a string into an array of DOM nodes.",
            "line": " src/d.ts/jquery/jquery.d.ts:1057"
        },
        {
            "message": "Missing item type\nThe jQuery instance members",
            "line": " src/d.ts/jquery/jquery.d.ts:1067"
        },
        {
            "message": "Missing item type\nRegister a handler to be called when Ajax requests complete. This is an AjaxEvent.",
            "line": " src/d.ts/jquery/jquery.d.ts:1071"
        },
        {
            "message": "Missing item type\nRegister a handler to be called when Ajax requests complete with an error. This is an Ajax Event.",
            "line": " src/d.ts/jquery/jquery.d.ts:1077"
        },
        {
            "message": "Missing item type\nAttach a function to be executed before an Ajax request is sent. This is an Ajax Event.",
            "line": " src/d.ts/jquery/jquery.d.ts:1083"
        },
        {
            "message": "Missing item type\nRegister a handler to be called when the first Ajax request begins. This is an Ajax Event.",
            "line": " src/d.ts/jquery/jquery.d.ts:1089"
        },
        {
            "message": "Missing item type\nRegister a handler to be called when all Ajax requests have completed. This is an Ajax Event.",
            "line": " src/d.ts/jquery/jquery.d.ts:1095"
        },
        {
            "message": "Missing item type\nAttach a function to be executed whenever an Ajax request completes successfully. This is an Ajax Event.",
            "line": " src/d.ts/jquery/jquery.d.ts:1101"
        },
        {
            "message": "Missing item type\nLoad data from the server and place the returned HTML into the matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:1108"
        },
        {
            "message": "Missing item type\nLoad data from the server and place the returned HTML into the matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:1116"
        },
        {
            "message": "Missing item type\nEncode a set of form elements as a string for submission.",
            "line": " src/d.ts/jquery/jquery.d.ts:1125"
        },
        {
            "message": "Missing item type\nEncode a set of form elements as an array of names and values.",
            "line": " src/d.ts/jquery/jquery.d.ts:1129"
        },
        {
            "message": "Missing item type\nAdds the specified class(es) to each of the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1134"
        },
        {
            "message": "Missing item type\nAdds the specified class(es) to each of the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1140"
        },
        {
            "message": "Missing item type\nAdd the previous set of elements on the stack to the current set, optionally filtered by a selector.",
            "line": " src/d.ts/jquery/jquery.d.ts:1147"
        },
        {
            "message": "Missing item type\nGet the value of an attribute for the first element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1152"
        },
        {
            "message": "Missing item type\nSet one or more attributes for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1158"
        },
        {
            "message": "Missing item type\nSet one or more attributes for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1165"
        },
        {
            "message": "Missing item type\nSet one or more attributes for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1172"
        },
        {
            "message": "Missing item type\nSet one or more attributes for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1179"
        },
        {
            "message": "Missing item type\nDetermine whether any of the matched elements are assigned the given class.",
            "line": " src/d.ts/jquery/jquery.d.ts:1186"
        },
        {
            "message": "Missing item type\nGet the HTML contents of the first element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1193"
        },
        {
            "message": "Missing item type\nSet the HTML contents of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1197"
        },
        {
            "message": "Missing item type\nSet the HTML contents of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1203"
        },
        {
            "message": "Missing item type\nSet the HTML contents of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1209"
        },
        {
            "message": "Missing item type\nGet the value of a property for the first element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1215"
        },
        {
            "message": "Missing item type\nSet one or more properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1221"
        },
        {
            "message": "Missing item type\nSet one or more properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1228"
        },
        {
            "message": "Missing item type\nSet one or more properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1235"
        },
        {
            "message": "Missing item type\nSet one or more properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1242"
        },
        {
            "message": "Missing item type\nSet one or more properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1248"
        },
        {
            "message": "Missing item type\nRemove an attribute from each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1256"
        },
        {
            "message": "Missing item type\nRemove a single class, multiple classes, or all classes from each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1263"
        },
        {
            "message": "Missing item type\nRemove a single class, multiple classes, or all classes from each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1269"
        },
        {
            "message": "Missing item type\nRemove a property for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1276"
        },
        {
            "message": "Missing item type\nAdd or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.",
            "line": " src/d.ts/jquery/jquery.d.ts:1283"
        },
        {
            "message": "Missing item type\nAdd or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.",
            "line": " src/d.ts/jquery/jquery.d.ts:1290"
        },
        {
            "message": "Missing item type\nAdd or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.",
            "line": " src/d.ts/jquery/jquery.d.ts:1296"
        },
        {
            "message": "Missing item type\nGet the current value of the first element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1304"
        },
        {
            "message": "Missing item type\nSet the value of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1308"
        },
        {
            "message": "Missing item type\nSet the value of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1314"
        },
        {
            "message": "Missing item type\nSet the value of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1320"
        },
        {
            "message": "Missing item type\nGet the value of style properties for the first element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1327"
        },
        {
            "message": "Missing item type\nSet one or more CSS properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1333"
        },
        {
            "message": "Missing item type\nSet one or more CSS properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1340"
        },
        {
            "message": "Missing item type\nSet one or more CSS properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1347"
        },
        {
            "message": "Missing item type\nSet one or more CSS properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1354"
        },
        {
            "message": "Missing item type\nSet one or more CSS properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1361"
        },
        {
            "message": "Missing item type\nSet one or more CSS properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1368"
        },
        {
            "message": "Missing item type\nSet one or more CSS properties for the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1375"
        },
        {
            "message": "Missing item type\nGet the current computed height for the first element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1382"
        },
        {
            "message": "Missing item type\nSet the CSS height of every matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:1386"
        },
        {
            "message": "Missing item type\nSet the CSS height of every matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:1392"
        },
        {
            "message": "Missing item type\nSet the CSS height of every matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:1398"
        },
        {
            "message": "Missing item type\nSet the CSS height of every matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:1404"
        },
        {
            "message": "Missing item type\nSet the CSS height of every matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:1410"
        },
        {
            "message": "Missing item type\nSet the CSS height of every matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:1416"
        },
        {
            "message": "Missing item type\nGet the current computed height for the first element in the set of matched elements, including padding but not border.",
            "line": " src/d.ts/jquery/jquery.d.ts:1423"
        },
        {
            "message": "Missing item type\nGet the current computed width for the first element in the set of matched elements, including padding but not border.",
            "line": " src/d.ts/jquery/jquery.d.ts:1428"
        },
        {
            "message": "Missing item type\nGet the current coordinates of the first element in the set of matched elements, relative to the document.",
            "line": " src/d.ts/jquery/jquery.d.ts:1433"
        },
        {
            "message": "Missing item type\nAn object containing the properties top and left, which are integers indicating the new top and left coordinates for the elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1437"
        },
        {
            "message": "Missing item type\nAn object containing the properties top and left, which are integers indicating the new top and left coordinates for the elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1443"
        },
        {
            "message": "Missing item type\nGet the current computed height for the first element in the set of matched elements, including padding, border, and optionally margin. Returns an integer (without \"px\") representation of the value or null if called on an empty set of elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1450"
        },
        {
            "message": "Missing item type\nGet the current computed width for the first element in the set of matched elements, including padding and border.",
            "line": " src/d.ts/jquery/jquery.d.ts:1457"
        },
        {
            "message": "Missing item type\nGet the current coordinates of the first element in the set of matched elements, relative to the offset parent.",
            "line": " src/d.ts/jquery/jquery.d.ts:1464"
        },
        {
            "message": "Missing item type\nGet the current horizontal position of the scroll bar for the first element in the set of matched elements or set the horizontal position of the scroll bar for every matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:1469"
        },
        {
            "message": "Missing item type\nSet the current horizontal position of the scroll bar for each of the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1473"
        },
        {
            "message": "Missing item type\nGet the current vertical position of the scroll bar for the first element in the set of matched elements or set the vertical position of the scroll bar for every matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:1480"
        },
        {
            "message": "Missing item type\nSet the current vertical position of the scroll bar for each of the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1484"
        },
        {
            "message": "Missing item type\nGet the current computed width for the first element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1491"
        },
        {
            "message": "Missing item type\nSet the CSS width of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1495"
        },
        {
            "message": "Missing item type\nSet the CSS width of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1501"
        },
        {
            "message": "Missing item type\nSet the CSS width of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1507"
        },
        {
            "message": "Missing item type\nSet the CSS width of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1513"
        },
        {
            "message": "Missing item type\nSet the CSS width of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1519"
        },
        {
            "message": "Missing item type\nSet the CSS width of each element in the set of matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1525"
        },
        {
            "message": "Missing item type\nRemove from the queue all items that have not yet been run.",
            "line": " src/d.ts/jquery/jquery.d.ts:1532"
        },
        {
            "message": "Missing item type\nStore arbitrary data associated with the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1539"
        },
        {
            "message": "Missing item type\nStore arbitrary data associated with the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1546"
        },
        {
            "message": "Missing item type\nReturn the value at the named data store for the first element in the jQuery collection, as set by data(name, value) or by an HTML5 data-* attribute.",
            "line": " src/d.ts/jquery/jquery.d.ts:1552"
        },
        {
            "message": "Missing item type\nReturn the value at the named data store for the first element in the jQuery collection, as set by data(name, value) or by an HTML5 data-* attribute.",
            "line": " src/d.ts/jquery/jquery.d.ts:1558"
        },
        {
            "message": "Missing item type\nExecute the next function on the queue for the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1563"
        },
        {
            "message": "Missing item type\nRemove a previously-stored piece of data.",
            "line": " src/d.ts/jquery/jquery.d.ts:1570"
        },
        {
            "message": "Missing item type\nRemove a previously-stored piece of data.",
            "line": " src/d.ts/jquery/jquery.d.ts:1576"
        },
        {
            "message": "Missing item type\nReturn a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.",
            "line": " src/d.ts/jquery/jquery.d.ts:1583"
        },
        {
            "message": "Missing item type\nPerform a custom animation of a set of CSS properties.",
            "line": " src/d.ts/jquery/jquery.d.ts:1591"
        },
        {
            "message": "Missing item type\nPerform a custom animation of a set of CSS properties.",
            "line": " src/d.ts/jquery/jquery.d.ts:1599"
        },
        {
            "message": "Missing item type\nPerform a custom animation of a set of CSS properties.",
            "line": " src/d.ts/jquery/jquery.d.ts:1607"
        },
        {
            "message": "Missing item type\nPerform a custom animation of a set of CSS properties.",
            "line": " src/d.ts/jquery/jquery.d.ts:1616"
        },
        {
            "message": "Missing item type\nPerform a custom animation of a set of CSS properties.",
            "line": " src/d.ts/jquery/jquery.d.ts:1625"
        },
        {
            "message": "Missing item type\nSet a timer to delay execution of subsequent items in the queue.",
            "line": " src/d.ts/jquery/jquery.d.ts:1633"
        },
        {
            "message": "Missing item type\nDisplay the matched elements by fading them to opaque.",
            "line": " src/d.ts/jquery/jquery.d.ts:1641"
        },
        {
            "message": "Missing item type\nDisplay the matched elements by fading them to opaque.",
            "line": " src/d.ts/jquery/jquery.d.ts:1648"
        },
        {
            "message": "Missing item type\nDisplay the matched elements by fading them to opaque.",
            "line": " src/d.ts/jquery/jquery.d.ts:1655"
        },
        {
            "message": "Missing item type\nDisplay the matched elements by fading them to opaque.",
            "line": " src/d.ts/jquery/jquery.d.ts:1663"
        },
        {
            "message": "Missing item type\nDisplay the matched elements by fading them to opaque.",
            "line": " src/d.ts/jquery/jquery.d.ts:1671"
        },
        {
            "message": "Missing item type\nHide the matched elements by fading them to transparent.",
            "line": " src/d.ts/jquery/jquery.d.ts:1678"
        },
        {
            "message": "Missing item type\nHide the matched elements by fading them to transparent.",
            "line": " src/d.ts/jquery/jquery.d.ts:1685"
        },
        {
            "message": "Missing item type\nHide the matched elements by fading them to transparent.",
            "line": " src/d.ts/jquery/jquery.d.ts:1692"
        },
        {
            "message": "Missing item type\nHide the matched elements by fading them to transparent.",
            "line": " src/d.ts/jquery/jquery.d.ts:1700"
        },
        {
            "message": "Missing item type\nHide the matched elements by fading them to transparent.",
            "line": " src/d.ts/jquery/jquery.d.ts:1708"
        },
        {
            "message": "Missing item type\nAdjust the opacity of the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1715"
        },
        {
            "message": "Missing item type\nAdjust the opacity of the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1723"
        },
        {
            "message": "Missing item type\nAdjust the opacity of the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1731"
        },
        {
            "message": "Missing item type\nAdjust the opacity of the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1740"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements by animating their opacity.",
            "line": " src/d.ts/jquery/jquery.d.ts:1750"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements by animating their opacity.",
            "line": " src/d.ts/jquery/jquery.d.ts:1757"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements by animating their opacity.",
            "line": " src/d.ts/jquery/jquery.d.ts:1764"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements by animating their opacity.",
            "line": " src/d.ts/jquery/jquery.d.ts:1772"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements by animating their opacity.",
            "line": " src/d.ts/jquery/jquery.d.ts:1780"
        },
        {
            "message": "Missing item type\nStop the currently-running animation, remove all queued animations, and complete all animations for the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1787"
        },
        {
            "message": "Missing item type\nHide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1794"
        },
        {
            "message": "Missing item type\nHide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1801"
        },
        {
            "message": "Missing item type\nHide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1808"
        },
        {
            "message": "Missing item type\nHide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1816"
        },
        {
            "message": "Missing item type\nHide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1824"
        },
        {
            "message": "Missing item type\nDisplay the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1831"
        },
        {
            "message": "Missing item type\nDisplay the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1838"
        },
        {
            "message": "Missing item type\nDisplay the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1845"
        },
        {
            "message": "Missing item type\nDisplay the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1853"
        },
        {
            "message": "Missing item type\nDisplay the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1861"
        },
        {
            "message": "Missing item type\nDisplay the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1868"
        },
        {
            "message": "Missing item type\nDisplay the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1875"
        },
        {
            "message": "Missing item type\nDisplay the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1882"
        },
        {
            "message": "Missing item type\nDisplay the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1890"
        },
        {
            "message": "Missing item type\nDisplay the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1898"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1905"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1912"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1919"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1927"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1935"
        },
        {
            "message": "Missing item type\nHide the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1942"
        },
        {
            "message": "Missing item type\nHide the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1949"
        },
        {
            "message": "Missing item type\nHide the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1956"
        },
        {
            "message": "Missing item type\nHide the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1964"
        },
        {
            "message": "Missing item type\nHide the matched elements with a sliding motion.",
            "line": " src/d.ts/jquery/jquery.d.ts:1972"
        },
        {
            "message": "Missing item type\nStop the currently-running animation on the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1979"
        },
        {
            "message": "Missing item type\nStop the currently-running animation on the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1986"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:1995"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2002"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2009"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2017"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2025"
        },
        {
            "message": "Missing item type\nDisplay or hide the matched elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2031"
        },
        {
            "message": "Missing item type\nTrigger the \"change\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2048"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"change\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2052"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"change\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2058"
        },
        {
            "message": "Missing item type\nTrigger the \"click\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2066"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"click\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2070"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"click\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2076"
        },
        {
            "message": "Missing item type\nTrigger the \"dblclick\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2084"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"dblclick\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2088"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"dblclick\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2094"
        },
        {
            "message": "Missing item type\nTrigger the \"focus\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2104"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"focus\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2108"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"focus\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2114"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"focusin\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2122"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"focusin\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2128"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"focusout\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2136"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"focusout\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2142"
        },
        {
            "message": "Missing item type\nBind two handlers to the matched elements, to be executed when the mouse pointer enters and leaves the elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2150"
        },
        {
            "message": "Missing item type\nBind a single handler to the matched elements, to be executed when the mouse pointer enters or leaves the elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2157"
        },
        {
            "message": "Missing item type\nTrigger the \"keydown\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2164"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"keydown\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2168"
        },
        {
            "message": "Missing item type\nBind an event handler to the keydown\"\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2174"
        },
        {
            "message": "Missing item type\nTrigger the \"keypress\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2182"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"keypress\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2186"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"keypress\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2192"
        },
        {
            "message": "Missing item type\nTrigger the \"keyup\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2200"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"keyup\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2204"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"keyup\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2210"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"load\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2218"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"load\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2224"
        },
        {
            "message": "Missing item type\nTrigger the \"mousedown\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2232"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"mousedown\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2236"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"mousedown\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2242"
        },
        {
            "message": "Missing item type\nTrigger the \"mouseenter\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2250"
        },
        {
            "message": "Missing item type\nBind an event handler to be fired when the mouse enters an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2254"
        },
        {
            "message": "Missing item type\nBind an event handler to be fired when the mouse enters an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2260"
        },
        {
            "message": "Missing item type\nTrigger the \"mouseleave\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2268"
        },
        {
            "message": "Missing item type\nBind an event handler to be fired when the mouse leaves an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2272"
        },
        {
            "message": "Missing item type\nBind an event handler to be fired when the mouse leaves an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2278"
        },
        {
            "message": "Missing item type\nTrigger the \"mousemove\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2286"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"mousemove\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2290"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"mousemove\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2296"
        },
        {
            "message": "Missing item type\nTrigger the \"mouseout\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2304"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"mouseout\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2308"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"mouseout\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2314"
        },
        {
            "message": "Missing item type\nTrigger the \"mouseover\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2322"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"mouseover\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2326"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"mouseover\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2332"
        },
        {
            "message": "Missing item type\nTrigger the \"mouseup\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2340"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"mouseup\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2344"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"mouseup\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2350"
        },
        {
            "message": "Missing item type\nRemove an event handler.",
            "line": " src/d.ts/jquery/jquery.d.ts:2358"
        },
        {
            "message": "Missing item type\nRemove an event handler.",
            "line": " src/d.ts/jquery/jquery.d.ts:2362"
        },
        {
            "message": "Missing item type\nRemove an event handler.",
            "line": " src/d.ts/jquery/jquery.d.ts:2370"
        },
        {
            "message": "Missing item type\nRemove an event handler.",
            "line": " src/d.ts/jquery/jquery.d.ts:2377"
        },
        {
            "message": "Missing item type\nAttach an event handler function for one or more events to the selected elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2385"
        },
        {
            "message": "Missing item type\nAttach an event handler function for one or more events to the selected elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2392"
        },
        {
            "message": "Missing item type\nAttach an event handler function for one or more events to the selected elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2400"
        },
        {
            "message": "Missing item type\nAttach an event handler function for one or more events to the selected elements.",
            "line": " src/d.ts/jquery/jquery.d.ts:2409"
        },
        {
            "message": "Missing item type\nAttach a handler to an event for the elements. The handler is executed at most once per element per event type.",
            "line": " src/d.ts/jquery/jquery.d.ts:2418"
        },
        {
            "message": "Missing item type\nAttach a handler to an event for the elements. The handler is executed at most once per element per event type.",
            "line": " src/d.ts/jquery/jquery.d.ts:2425"
        },
        {
            "message": "Missing item type\nAttach a handler to an event for the elements. The handler is executed at most once per element per event type.",
            "line": " src/d.ts/jquery/jquery.d.ts:2434"
        },
        {
            "message": "Missing item type\nAttach a handler to an event for the elements. The handler is executed at most once per element per event type.",
            "line": " src/d.ts/jquery/jquery.d.ts:2442"
        },
        {
            "message": "Missing item type\nAttach a handler to an event for the elements. The handler is executed at most once per element per event type.",
            "line": " src/d.ts/jquery/jquery.d.ts:2452"
        },
        {
            "message": "Missing item type\nSpecify a function to execute when the DOM is fully loaded.",
            "line": " src/d.ts/jquery/jquery.d.ts:2462"
        },
        {
            "message": "Missing item type\nTrigger the \"resize\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2469"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"resize\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2473"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"resize\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2479"
        },
        {
            "message": "Missing item type\nTrigger the \"scroll\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2487"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"scroll\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2491"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"scroll\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2497"
        },
        {
            "message": "Missing item type\nTrigger the \"select\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2505"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"select\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2509"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"select\" JavaScript event.",
            "line": " src/d.ts/jquery/jquery.d.ts:2515"
        },
        {
            "message": "Missing item type\nTrigger the \"submit\" event on an element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2523"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"submit\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2527"
        },
        {
            "message": "Missing item type\nBind an event handler to the \"submit\" JavaScript event",
            "line": " src/d.ts/jquery/jquery.d.ts:2533"
        },
        {
            "message": "Missing item type\nIterate over a jQuery object, executing a function for each matched element.",
            "line": " src/d.ts/jquery/jquery.d.ts:2616"
        },
        {
            "message": "Missing item type\nswipeイベントが発火していた場合は処理をしない。\nイベントは dragstart → drag → swipe → dragend の順番に発火する",
            "line": " src/psyborg/Psycle/PsycleTransitionSlide.ts:106"
        },
        {
            "message": "Missing item type\n直接幅を設定してしまうとインラインCSSで設定されるので\n次回取得時にその幅しか取得できない。\n固定の場合は問題ないが相対値の場合は問題となるので\n初期化時のインラインスタイルに戻すことで\n常にオリジナルの幅を取得できるようになる。",
            "line": " src/psyborg/Psycle/PsycleTransitionSlide.ts:156"
        },
        {
            "message": "Missing item type",
            "line": " src/psyborg/Util.ts:53"
        },
        {
            "message": "Missing item type",
            "line": " src/psyborg/Util.ts:69"
        }
    ]
}